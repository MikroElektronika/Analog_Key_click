;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 6.12.2018. 16:10:06
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x05CB940C  	JMP        _main
0x0004	0x0000940C  	JMP        0
0x0008	0x0000940C  	JMP        0
0x000C	0x0000940C  	JMP        0
0x0010	0x0000940C  	JMP        0
0x0014	0x0000940C  	JMP        0
0x0018	0x0000940C  	JMP        0
0x001C	0x0000940C  	JMP        0
0x0020	0x0000940C  	JMP        0
0x0024	0x0000940C  	JMP        0
0x0028	0x0000940C  	JMP        0
0x002C	0x0000940C  	JMP        0
0x0030	0x0000940C  	JMP        0
0x0034	0x0000940C  	JMP        0
0x0038	0x0000940C  	JMP        0
0x003C	0x0000940C  	JMP        0
0x0040	0x0000940C  	JMP        0
0x0044	0x0000940C  	JMP        0
0x0048	0x0000940C  	JMP        0
0x004C	0x0000940C  	JMP        0
0x0050	0x0000940C  	JMP        0
_main:
0x0B96	0xE5BF    	LDI        R27, 95
0x0B98	0xBFBD    	OUT        SPL+0, R27
0x0B9A	0xE0B8    	LDI        R27, 8
0x0B9C	0xBFBE    	OUT        SPL+1, R27
0x0B9E	0x060F940E  	CALL       1551
;Click_AnalogKey_AVR.c,77 :: 		void main()
;Click_AnalogKey_AVR.c,79 :: 		systemInit();
0x0BA2	0xDF89    	RCALL      _systemInit+0
;Click_AnalogKey_AVR.c,80 :: 		applicationInit();
0x0BA4	0xDF6F    	RCALL      _applicationInit+0
;Click_AnalogKey_AVR.c,82 :: 		while (1)
L_main6:
;Click_AnalogKey_AVR.c,84 :: 		applicationTask();
0x0BA6	0xDFA4    	RCALL      _applicationTask+0
;Click_AnalogKey_AVR.c,85 :: 		}
0x0BA8	0xCFFE    	RJMP       L_main6
;Click_AnalogKey_AVR.c,86 :: 		}
L_end_main:
L__main_end_loop:
0x0BAA	0xCFFF    	RJMP       L__main_end_loop
; end of _main
_systemInit:
;Click_AnalogKey_AVR.c,31 :: 		void systemInit()
;Click_AnalogKey_AVR.c,33 :: 		mikrobus_logInit( _LOG_USBUART, 9600 );
0x0AB6	0x922F    	PUSH       R2
0x0AB8	0x923F    	PUSH       R3
0x0ABA	0x924F    	PUSH       R4
0x0ABC	0x925F    	PUSH       R5
0x0ABE	0x926F    	PUSH       R6
0x0AC0	0xE8B0    	LDI        R27, 128
0x0AC2	0x2E3B    	MOV        R3, R27
0x0AC4	0xE2B5    	LDI        R27, 37
0x0AC6	0x2E4B    	MOV        R4, R27
0x0AC8	0xE0B0    	LDI        R27, 0
0x0ACA	0x2E5B    	MOV        R5, R27
0x0ACC	0x2E6B    	MOV        R6, R27
0x0ACE	0xE1B0    	LDI        R27, 16
0x0AD0	0x2E2B    	MOV        R2, R27
0x0AD2	0xDF86    	RCALL      _mikrobus_logInit+0
;Click_AnalogKey_AVR.c,34 :: 		mikrobus_logWrite("--- System Init ---", _LOG_LINE);
0x0AD4	0xE0B2    	LDI        R27, 2
0x0AD6	0x2E4B    	MOV        R4, R27
0x0AD8	0xE8BD    	LDI        R27, lo_addr(?lstr1_Click_AnalogKey_AVR+0)
0x0ADA	0x2E2B    	MOV        R2, R27
0x0ADC	0xE0B0    	LDI        R27, hi_addr(?lstr1_Click_AnalogKey_AVR+0)
0x0ADE	0x2E3B    	MOV        R3, R27
0x0AE0	0xDF0D    	RCALL      _mikrobus_logWrite+0
;Click_AnalogKey_AVR.c,35 :: 		Delay_100ms();
0x0AE2	0xDF74    	RCALL      _Delay_100ms+0
;Click_AnalogKey_AVR.c,36 :: 		}
L_end_systemInit:
0x0AE4	0x906F    	POP        R6
0x0AE6	0x905F    	POP        R5
0x0AE8	0x904F    	POP        R4
0x0AEA	0x903F    	POP        R3
0x0AEC	0x902F    	POP        R2
0x0AEE	0x9508    	RET
; end of _systemInit
_mikrobus_logInit:
;easyavr_v7_ATMEGA32.c,283 :: 		T_mikrobus_ret mikrobus_logInit(T_log_bus port, const uint32_t baud)
;easyavr_v7_ATMEGA32.c,285 :: 		switch( port )
0x09E0	0x922F    	PUSH       R2
0x09E2	0x923F    	PUSH       R3
0x09E4	0x924F    	PUSH       R4
0x09E6	0x925F    	PUSH       R5
0x09E8	0x926F    	PUSH       R6
0x09EA	0xC01A    	RJMP       L_mikrobus_logInit78
;easyavr_v7_ATMEGA32.c,288 :: 		case _MIKROBUS1 : return _log_init1( baud );
L_mikrobus_logInit80:
0x09EC	0x2C23    	MOV        R2, R3
0x09EE	0x2C34    	MOV        R3, R4
0x09F0	0x2C45    	MOV        R4, R5
0x09F2	0x2C56    	MOV        R5, R6
0x09F4	0xDCA3    	RCALL      easyavr_v7_ATMEGA32__log_init1+0
0x09F6	0xC021    	RJMP       L_end_mikrobus_logInit
;easyavr_v7_ATMEGA32.c,291 :: 		case _MIKROBUS2: return _log_init2( baud );
L_mikrobus_logInit81:
0x09F8	0x2C23    	MOV        R2, R3
0x09FA	0x2C34    	MOV        R3, R4
0x09FC	0x2C45    	MOV        R4, R5
0x09FE	0x2C56    	MOV        R5, R6
0x0A00	0xDD21    	RCALL      easyavr_v7_ATMEGA32__log_init2+0
0x0A02	0xC01B    	RJMP       L_end_mikrobus_logInit
;easyavr_v7_ATMEGA32.c,294 :: 		case _MIKROBUS3: return _log_init3( baud );
L_mikrobus_logInit82:
0x0A04	0x2C23    	MOV        R2, R3
0x0A06	0x2C34    	MOV        R3, R4
0x0A08	0x2C45    	MOV        R4, R5
0x0A0A	0x2C56    	MOV        R5, R6
0x0A0C	0xDD19    	RCALL      easyavr_v7_ATMEGA32__log_init3+0
0x0A0E	0xC015    	RJMP       L_end_mikrobus_logInit
;easyavr_v7_ATMEGA32.c,306 :: 		case _LOG_USBUART : return _log_initUart( baud );
L_mikrobus_logInit83:
0x0A10	0x2C23    	MOV        R2, R3
0x0A12	0x2C34    	MOV        R3, R4
0x0A14	0x2C45    	MOV        R4, R5
0x0A16	0x2C56    	MOV        R5, R6
0x0A18	0xDD97    	RCALL      easyavr_v7_ATMEGA32__log_initUart+0
0x0A1A	0xC00F    	RJMP       L_end_mikrobus_logInit
;easyavr_v7_ATMEGA32.c,314 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_logInit84:
0x0A1C	0xE001    	LDI        R16, 1
0x0A1E	0xC00D    	RJMP       L_end_mikrobus_logInit
;easyavr_v7_ATMEGA32.c,315 :: 		}
L_mikrobus_logInit78:
0x0A20	0xE0B0    	LDI        R27, 0
0x0A22	0x162B    	CP         R2, R27
0x0A24	0xF319    	BREQ       L_mikrobus_logInit80
L__mikrobus_logInit252:
0x0A26	0xE0B1    	LDI        R27, 1
0x0A28	0x162B    	CP         R2, R27
0x0A2A	0xF331    	BREQ       L_mikrobus_logInit81
L__mikrobus_logInit253:
0x0A2C	0xE0B2    	LDI        R27, 2
0x0A2E	0x162B    	CP         R2, R27
0x0A30	0xF349    	BREQ       L_mikrobus_logInit82
L__mikrobus_logInit254:
0x0A32	0xE1B0    	LDI        R27, 16
0x0A34	0x162B    	CP         R2, R27
0x0A36	0xF361    	BREQ       L_mikrobus_logInit83
L__mikrobus_logInit255:
0x0A38	0xCFF1    	RJMP       L_mikrobus_logInit84
;easyavr_v7_ATMEGA32.c,317 :: 		}
L_end_mikrobus_logInit:
0x0A3A	0x906F    	POP        R6
0x0A3C	0x905F    	POP        R5
0x0A3E	0x904F    	POP        R4
0x0A40	0x903F    	POP        R3
0x0A42	0x902F    	POP        R2
0x0A44	0x9508    	RET
; end of _mikrobus_logInit
easyavr_v7_ATMEGA32__log_init1:
;__ea_atmega32_log.c,23 :: 		static T_mikrobus_ret _log_init1(uint32_t baud)
;__ea_atmega32_log.c,25 :: 		switch( baud )
0x033C	0xC02B    	RJMP       L_easyavr_v7_ATMEGA32__log_init145
;__ea_atmega32_log.c,27 :: 		case 4800   : UART1_Init(4800);   break;
L_easyavr_v7_ATMEGA32__log_init147:
0x033E	0xE6B7    	LDI        R27, 103
0x0340	0xB9B9    	OUT        UBRRL+0, R27
0x0342	0xE0B0    	LDI        R27, 0
0x0344	0xBDB0    	OUT        UBRRH+0, R27
0x0346	0xDF20    	RCALL      _UART1_Init+0
0x0348	0xC073    	RJMP       L_easyavr_v7_ATMEGA32__log_init146
;__ea_atmega32_log.c,28 :: 		case 9600   : UART1_Init(9600);   break;
L_easyavr_v7_ATMEGA32__log_init148:
0x034A	0xE3B3    	LDI        R27, 51
0x034C	0xB9B9    	OUT        UBRRL+0, R27
0x034E	0xE0B0    	LDI        R27, 0
0x0350	0xBDB0    	OUT        UBRRH+0, R27
0x0352	0xDF1A    	RCALL      _UART1_Init+0
0x0354	0xC06D    	RJMP       L_easyavr_v7_ATMEGA32__log_init146
;__ea_atmega32_log.c,29 :: 		case 19200  : UART1_Init(19200);  break;
L_easyavr_v7_ATMEGA32__log_init149:
0x0356	0xE1B9    	LDI        R27, 25
0x0358	0xB9B9    	OUT        UBRRL+0, R27
0x035A	0xE0B0    	LDI        R27, 0
0x035C	0xBDB0    	OUT        UBRRH+0, R27
0x035E	0xDF14    	RCALL      _UART1_Init+0
0x0360	0xC067    	RJMP       L_easyavr_v7_ATMEGA32__log_init146
;__ea_atmega32_log.c,30 :: 		case 38400  : UART1_Init(38400);  break;
L_easyavr_v7_ATMEGA32__log_init150:
0x0362	0xE0BC    	LDI        R27, 12
0x0364	0xB9B9    	OUT        UBRRL+0, R27
0x0366	0xE0B0    	LDI        R27, 0
0x0368	0xBDB0    	OUT        UBRRH+0, R27
0x036A	0xDF0E    	RCALL      _UART1_Init+0
0x036C	0xC061    	RJMP       L_easyavr_v7_ATMEGA32__log_init146
;__ea_atmega32_log.c,31 :: 		case 57600  : UART1_Init(57600);  break;
L_easyavr_v7_ATMEGA32__log_init151:
0x036E	0xB1BB    	IN         R27, U2X_bit+0
0x0370	0x60B2    	SBR        R27, 2
0x0372	0xB9BB    	OUT        U2X_bit+0, R27
0x0374	0xE1B0    	LDI        R27, 16
0x0376	0xB9B9    	OUT        UBRRL+0, R27
0x0378	0xE0B0    	LDI        R27, 0
0x037A	0xBDB0    	OUT        UBRRH+0, R27
0x037C	0xDF05    	RCALL      _UART1_Init+0
0x037E	0xC058    	RJMP       L_easyavr_v7_ATMEGA32__log_init146
;__ea_atmega32_log.c,32 :: 		case 115200 : UART1_Init(115200); break;
L_easyavr_v7_ATMEGA32__log_init152:
0x0380	0xB1BB    	IN         R27, U2X_bit+0
0x0382	0x60B2    	SBR        R27, 2
0x0384	0xB9BB    	OUT        U2X_bit+0, R27
0x0386	0xE0B8    	LDI        R27, 8
0x0388	0xB9B9    	OUT        UBRRL+0, R27
0x038A	0xE0B0    	LDI        R27, 0
0x038C	0xBDB0    	OUT        UBRRH+0, R27
0x038E	0xDEFC    	RCALL      _UART1_Init+0
0x0390	0xC04F    	RJMP       L_easyavr_v7_ATMEGA32__log_init146
;__ea_atmega32_log.c,33 :: 		default     : _MIKROBUS_ERR_LOG;
L_easyavr_v7_ATMEGA32__log_init153:
;__ea_atmega32_log.c,34 :: 		}
0x0392	0xC04E    	RJMP       L_easyavr_v7_ATMEGA32__log_init146
L_easyavr_v7_ATMEGA32__log_init145:
0x0394	0xE0B0    	LDI        R27, 0
0x0396	0x165B    	CP         R5, R27
0x0398	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_init1208
0x039A	0xE0B0    	LDI        R27, 0
0x039C	0x164B    	CP         R4, R27
0x039E	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_init1208
0x03A0	0xE1B2    	LDI        R27, 18
0x03A2	0x163B    	CP         R3, R27
0x03A4	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_init1208
0x03A6	0xECB0    	LDI        R27, 192
0x03A8	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_init1208:
0x03AA	0xF249    	BREQ       L_easyavr_v7_ATMEGA32__log_init147
L_easyavr_v7_ATMEGA32__log_init1209:
0x03AC	0xE0B0    	LDI        R27, 0
0x03AE	0x165B    	CP         R5, R27
0x03B0	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_init1210
0x03B2	0xE0B0    	LDI        R27, 0
0x03B4	0x164B    	CP         R4, R27
0x03B6	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_init1210
0x03B8	0xE2B5    	LDI        R27, 37
0x03BA	0x163B    	CP         R3, R27
0x03BC	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_init1210
0x03BE	0xE8B0    	LDI        R27, 128
0x03C0	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_init1210:
0x03C2	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_init1211
0x03C4	0xCFC2    	RJMP       L_easyavr_v7_ATMEGA32__log_init148
L_easyavr_v7_ATMEGA32__log_init1211:
0x03C6	0xE0B0    	LDI        R27, 0
0x03C8	0x165B    	CP         R5, R27
0x03CA	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_init1212
0x03CC	0xE0B0    	LDI        R27, 0
0x03CE	0x164B    	CP         R4, R27
0x03D0	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_init1212
0x03D2	0xE4BB    	LDI        R27, 75
0x03D4	0x163B    	CP         R3, R27
0x03D6	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_init1212
0x03D8	0xE0B0    	LDI        R27, 0
0x03DA	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_init1212:
0x03DC	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_init1213
0x03DE	0xCFBB    	RJMP       L_easyavr_v7_ATMEGA32__log_init149
L_easyavr_v7_ATMEGA32__log_init1213:
0x03E0	0xE0B0    	LDI        R27, 0
0x03E2	0x165B    	CP         R5, R27
0x03E4	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_init1214
0x03E6	0xE0B0    	LDI        R27, 0
0x03E8	0x164B    	CP         R4, R27
0x03EA	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_init1214
0x03EC	0xE9B6    	LDI        R27, 150
0x03EE	0x163B    	CP         R3, R27
0x03F0	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_init1214
0x03F2	0xE0B0    	LDI        R27, 0
0x03F4	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_init1214:
0x03F6	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_init1215
0x03F8	0xCFB4    	RJMP       L_easyavr_v7_ATMEGA32__log_init150
L_easyavr_v7_ATMEGA32__log_init1215:
0x03FA	0xE0B0    	LDI        R27, 0
0x03FC	0x165B    	CP         R5, R27
0x03FE	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_init1216
0x0400	0xE0B0    	LDI        R27, 0
0x0402	0x164B    	CP         R4, R27
0x0404	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_init1216
0x0406	0xEEB1    	LDI        R27, 225
0x0408	0x163B    	CP         R3, R27
0x040A	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_init1216
0x040C	0xE0B0    	LDI        R27, 0
0x040E	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_init1216:
0x0410	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_init1217
0x0412	0xCFAD    	RJMP       L_easyavr_v7_ATMEGA32__log_init151
L_easyavr_v7_ATMEGA32__log_init1217:
0x0414	0xE0B0    	LDI        R27, 0
0x0416	0x165B    	CP         R5, R27
0x0418	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_init1218
0x041A	0xE0B1    	LDI        R27, 1
0x041C	0x164B    	CP         R4, R27
0x041E	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_init1218
0x0420	0xECB2    	LDI        R27, 194
0x0422	0x163B    	CP         R3, R27
0x0424	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_init1218
0x0426	0xE0B0    	LDI        R27, 0
0x0428	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_init1218:
0x042A	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_init1219
0x042C	0xCFA9    	RJMP       L_easyavr_v7_ATMEGA32__log_init152
L_easyavr_v7_ATMEGA32__log_init1219:
0x042E	0xCFB1    	RJMP       L_easyavr_v7_ATMEGA32__log_init153
L_easyavr_v7_ATMEGA32__log_init146:
;__ea_atmega32_log.c,35 :: 		logger = UART1_Write;
0x0430	0xEEB8    	LDI        R27, lo_addr(_UART1_Write+0)
0x0432	0x00A393B0  	STS        _logger+0, R27
0x0436	0xE0B0    	LDI        R27, hi_addr(_UART1_Write+0)
0x0438	0x00A493B0  	STS        _logger+1, R27
;__ea_atmega32_log.c,36 :: 		return 0;
0x043C	0xE000    	LDI        R16, 0
;__ea_atmega32_log.c,37 :: 		}
L_end__log_init1:
0x043E	0x9508    	RET
; end of easyavr_v7_ATMEGA32__log_init1
_UART1_Init:
;__Lib_UART_d01_ursel.c,31 :: 		
;__Lib_UART_d01_ursel.c,32 :: 		
0x0188	0xEEB8    	LDI        R27, lo_addr(_UART1_Write+0)
0x018A	0x00A993B0  	STS        _UART_Wr_Ptr+0, R27
0x018E	0xE0B0    	LDI        R27, hi_addr(_UART1_Write+0)
0x0190	0x00AA93B0  	STS        _UART_Wr_Ptr+1, R27
;__Lib_UART_d01_ursel.c,33 :: 		
0x0194	0xEFBF    	LDI        R27, lo_addr(_UART1_Read+0)
0x0196	0x00AB93B0  	STS        _UART_Rd_Ptr+0, R27
0x019A	0xEFBF    	LDI        R27, hi_addr(_UART1_Read+0)
0x019C	0x00AC93B0  	STS        _UART_Rd_Ptr+1, R27
;__Lib_UART_d01_ursel.c,34 :: 		
0x01A0	0xEFBF    	LDI        R27, lo_addr(_UART1_Data_Ready+0)
0x01A2	0x00A593B0  	STS        _UART_Rdy_Ptr+0, R27
0x01A6	0xEFBF    	LDI        R27, hi_addr(_UART1_Data_Ready+0)
0x01A8	0x00A693B0  	STS        _UART_Rdy_Ptr+1, R27
;__Lib_UART_d01_ursel.c,35 :: 		
0x01AC	0xEFBF    	LDI        R27, lo_addr(_UART1_Tx_Idle+0)
0x01AE	0x00A793B0  	STS        _UART_Tx_Idle_Ptr+0, R27
0x01B2	0xEFBF    	LDI        R27, hi_addr(_UART1_Tx_Idle+0)
0x01B4	0x00A893B0  	STS        _UART_Tx_Idle_Ptr+1, R27
;__Lib_UART_d01_ursel.c,37 :: 		
0x01B8	0xB3B1    	IN         R27, DDRD+0
0x01BA	0x7FBE    	CBR        R27, 1
0x01BC	0xBBB1    	OUT        DDRD+0, R27
;__Lib_UART_d01_ursel.c,38 :: 		
0x01BE	0xB3B1    	IN         R27, DDRD+0
0x01C0	0x60B2    	SBR        R27, 2
0x01C2	0xBBB1    	OUT        DDRD+0, R27
;__Lib_UART_d01_ursel.c,40 :: 		
0x01C4	0xB10A    	IN         R16, UCSR0B+0
0x01C6	0x6108    	ORI        R16, 24
0x01C8	0xB90A    	OUT        UCSR0B+0, R16
;__Lib_UART_d01_ursel.c,41 :: 		
0x01CA	0xE8B6    	LDI        R27, 134
0x01CC	0xBDB0    	OUT        UCSR0C+0, R27
;__Lib_UART_d01_ursel.c,42 :: 		
L_end_UART1_Init:
0x01CE	0x9508    	RET
; end of _UART1_Init
easyavr_v7_ATMEGA32__log_init2:
;__ea_atmega32_log.c,39 :: 		static T_mikrobus_ret _log_init2(uint32_t baud)
;__ea_atmega32_log.c,41 :: 		switch( baud )
0x0444	0xC02B    	RJMP       L_easyavr_v7_ATMEGA32__log_init254
;__ea_atmega32_log.c,43 :: 		case 4800   : UART1_Init(4800);   break;
L_easyavr_v7_ATMEGA32__log_init256:
0x0446	0xE6B7    	LDI        R27, 103
0x0448	0xB9B9    	OUT        UBRRL+0, R27
0x044A	0xE0B0    	LDI        R27, 0
0x044C	0xBDB0    	OUT        UBRRH+0, R27
0x044E	0xDE9C    	RCALL      _UART1_Init+0
0x0450	0xC073    	RJMP       L_easyavr_v7_ATMEGA32__log_init255
;__ea_atmega32_log.c,44 :: 		case 9600   : UART1_Init(9600);   break;
L_easyavr_v7_ATMEGA32__log_init257:
0x0452	0xE3B3    	LDI        R27, 51
0x0454	0xB9B9    	OUT        UBRRL+0, R27
0x0456	0xE0B0    	LDI        R27, 0
0x0458	0xBDB0    	OUT        UBRRH+0, R27
0x045A	0xDE96    	RCALL      _UART1_Init+0
0x045C	0xC06D    	RJMP       L_easyavr_v7_ATMEGA32__log_init255
;__ea_atmega32_log.c,45 :: 		case 19200  : UART1_Init(19200);  break;
L_easyavr_v7_ATMEGA32__log_init258:
0x045E	0xE1B9    	LDI        R27, 25
0x0460	0xB9B9    	OUT        UBRRL+0, R27
0x0462	0xE0B0    	LDI        R27, 0
0x0464	0xBDB0    	OUT        UBRRH+0, R27
0x0466	0xDE90    	RCALL      _UART1_Init+0
0x0468	0xC067    	RJMP       L_easyavr_v7_ATMEGA32__log_init255
;__ea_atmega32_log.c,46 :: 		case 38400  : UART1_Init(38400);  break;
L_easyavr_v7_ATMEGA32__log_init259:
0x046A	0xE0BC    	LDI        R27, 12
0x046C	0xB9B9    	OUT        UBRRL+0, R27
0x046E	0xE0B0    	LDI        R27, 0
0x0470	0xBDB0    	OUT        UBRRH+0, R27
0x0472	0xDE8A    	RCALL      _UART1_Init+0
0x0474	0xC061    	RJMP       L_easyavr_v7_ATMEGA32__log_init255
;__ea_atmega32_log.c,47 :: 		case 57600  : UART1_Init(57600);  break;
L_easyavr_v7_ATMEGA32__log_init260:
0x0476	0xB1BB    	IN         R27, U2X_bit+0
0x0478	0x60B2    	SBR        R27, 2
0x047A	0xB9BB    	OUT        U2X_bit+0, R27
0x047C	0xE1B0    	LDI        R27, 16
0x047E	0xB9B9    	OUT        UBRRL+0, R27
0x0480	0xE0B0    	LDI        R27, 0
0x0482	0xBDB0    	OUT        UBRRH+0, R27
0x0484	0xDE81    	RCALL      _UART1_Init+0
0x0486	0xC058    	RJMP       L_easyavr_v7_ATMEGA32__log_init255
;__ea_atmega32_log.c,48 :: 		case 115200 : UART1_Init(115200); break;
L_easyavr_v7_ATMEGA32__log_init261:
0x0488	0xB1BB    	IN         R27, U2X_bit+0
0x048A	0x60B2    	SBR        R27, 2
0x048C	0xB9BB    	OUT        U2X_bit+0, R27
0x048E	0xE0B8    	LDI        R27, 8
0x0490	0xB9B9    	OUT        UBRRL+0, R27
0x0492	0xE0B0    	LDI        R27, 0
0x0494	0xBDB0    	OUT        UBRRH+0, R27
0x0496	0xDE78    	RCALL      _UART1_Init+0
0x0498	0xC04F    	RJMP       L_easyavr_v7_ATMEGA32__log_init255
;__ea_atmega32_log.c,49 :: 		default     : _MIKROBUS_ERR_LOG;
L_easyavr_v7_ATMEGA32__log_init262:
;__ea_atmega32_log.c,50 :: 		}
0x049A	0xC04E    	RJMP       L_easyavr_v7_ATMEGA32__log_init255
L_easyavr_v7_ATMEGA32__log_init254:
0x049C	0xE0B0    	LDI        R27, 0
0x049E	0x165B    	CP         R5, R27
0x04A0	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_init2221
0x04A2	0xE0B0    	LDI        R27, 0
0x04A4	0x164B    	CP         R4, R27
0x04A6	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_init2221
0x04A8	0xE1B2    	LDI        R27, 18
0x04AA	0x163B    	CP         R3, R27
0x04AC	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_init2221
0x04AE	0xECB0    	LDI        R27, 192
0x04B0	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_init2221:
0x04B2	0xF249    	BREQ       L_easyavr_v7_ATMEGA32__log_init256
L_easyavr_v7_ATMEGA32__log_init2222:
0x04B4	0xE0B0    	LDI        R27, 0
0x04B6	0x165B    	CP         R5, R27
0x04B8	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_init2223
0x04BA	0xE0B0    	LDI        R27, 0
0x04BC	0x164B    	CP         R4, R27
0x04BE	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_init2223
0x04C0	0xE2B5    	LDI        R27, 37
0x04C2	0x163B    	CP         R3, R27
0x04C4	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_init2223
0x04C6	0xE8B0    	LDI        R27, 128
0x04C8	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_init2223:
0x04CA	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_init2224
0x04CC	0xCFC2    	RJMP       L_easyavr_v7_ATMEGA32__log_init257
L_easyavr_v7_ATMEGA32__log_init2224:
0x04CE	0xE0B0    	LDI        R27, 0
0x04D0	0x165B    	CP         R5, R27
0x04D2	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_init2225
0x04D4	0xE0B0    	LDI        R27, 0
0x04D6	0x164B    	CP         R4, R27
0x04D8	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_init2225
0x04DA	0xE4BB    	LDI        R27, 75
0x04DC	0x163B    	CP         R3, R27
0x04DE	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_init2225
0x04E0	0xE0B0    	LDI        R27, 0
0x04E2	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_init2225:
0x04E4	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_init2226
0x04E6	0xCFBB    	RJMP       L_easyavr_v7_ATMEGA32__log_init258
L_easyavr_v7_ATMEGA32__log_init2226:
0x04E8	0xE0B0    	LDI        R27, 0
0x04EA	0x165B    	CP         R5, R27
0x04EC	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_init2227
0x04EE	0xE0B0    	LDI        R27, 0
0x04F0	0x164B    	CP         R4, R27
0x04F2	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_init2227
0x04F4	0xE9B6    	LDI        R27, 150
0x04F6	0x163B    	CP         R3, R27
0x04F8	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_init2227
0x04FA	0xE0B0    	LDI        R27, 0
0x04FC	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_init2227:
0x04FE	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_init2228
0x0500	0xCFB4    	RJMP       L_easyavr_v7_ATMEGA32__log_init259
L_easyavr_v7_ATMEGA32__log_init2228:
0x0502	0xE0B0    	LDI        R27, 0
0x0504	0x165B    	CP         R5, R27
0x0506	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_init2229
0x0508	0xE0B0    	LDI        R27, 0
0x050A	0x164B    	CP         R4, R27
0x050C	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_init2229
0x050E	0xEEB1    	LDI        R27, 225
0x0510	0x163B    	CP         R3, R27
0x0512	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_init2229
0x0514	0xE0B0    	LDI        R27, 0
0x0516	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_init2229:
0x0518	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_init2230
0x051A	0xCFAD    	RJMP       L_easyavr_v7_ATMEGA32__log_init260
L_easyavr_v7_ATMEGA32__log_init2230:
0x051C	0xE0B0    	LDI        R27, 0
0x051E	0x165B    	CP         R5, R27
0x0520	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_init2231
0x0522	0xE0B1    	LDI        R27, 1
0x0524	0x164B    	CP         R4, R27
0x0526	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_init2231
0x0528	0xECB2    	LDI        R27, 194
0x052A	0x163B    	CP         R3, R27
0x052C	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_init2231
0x052E	0xE0B0    	LDI        R27, 0
0x0530	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_init2231:
0x0532	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_init2232
0x0534	0xCFA9    	RJMP       L_easyavr_v7_ATMEGA32__log_init261
L_easyavr_v7_ATMEGA32__log_init2232:
0x0536	0xCFB1    	RJMP       L_easyavr_v7_ATMEGA32__log_init262
L_easyavr_v7_ATMEGA32__log_init255:
;__ea_atmega32_log.c,51 :: 		logger = UART1_Write;
0x0538	0xEEB8    	LDI        R27, lo_addr(_UART1_Write+0)
0x053A	0x00A393B0  	STS        _logger+0, R27
0x053E	0xE0B0    	LDI        R27, hi_addr(_UART1_Write+0)
0x0540	0x00A493B0  	STS        _logger+1, R27
;__ea_atmega32_log.c,52 :: 		return 0;
0x0544	0xE000    	LDI        R16, 0
;__ea_atmega32_log.c,53 :: 		}
L_end__log_init2:
0x0546	0x9508    	RET
; end of easyavr_v7_ATMEGA32__log_init2
easyavr_v7_ATMEGA32__log_init3:
;__ea_atmega32_log.c,55 :: 		static T_mikrobus_ret _log_init3(uint32_t baud)
;__ea_atmega32_log.c,57 :: 		return _MIKROBUS_ERR_LOG;
0x0440	0xE006    	LDI        R16, 6
;__ea_atmega32_log.c,58 :: 		}
L_end__log_init3:
0x0442	0x9508    	RET
; end of easyavr_v7_ATMEGA32__log_init3
easyavr_v7_ATMEGA32__log_initUart:
;__ea_atmega32_log.c,60 :: 		static T_mikrobus_ret _log_initUart(uint32_t baud)
;__ea_atmega32_log.c,62 :: 		switch( baud )
0x0548	0xC02B    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart63
;__ea_atmega32_log.c,64 :: 		case 4800   : UART1_Init(4800);   break;
L_easyavr_v7_ATMEGA32__log_initUart65:
0x054A	0xE6B7    	LDI        R27, 103
0x054C	0xB9B9    	OUT        UBRRL+0, R27
0x054E	0xE0B0    	LDI        R27, 0
0x0550	0xBDB0    	OUT        UBRRH+0, R27
0x0552	0xDE1A    	RCALL      _UART1_Init+0
0x0554	0xC073    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart64
;__ea_atmega32_log.c,65 :: 		case 9600   : UART1_Init(9600);   break;
L_easyavr_v7_ATMEGA32__log_initUart66:
0x0556	0xE3B3    	LDI        R27, 51
0x0558	0xB9B9    	OUT        UBRRL+0, R27
0x055A	0xE0B0    	LDI        R27, 0
0x055C	0xBDB0    	OUT        UBRRH+0, R27
0x055E	0xDE14    	RCALL      _UART1_Init+0
0x0560	0xC06D    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart64
;__ea_atmega32_log.c,66 :: 		case 19200  : UART1_Init(19200);  break;
L_easyavr_v7_ATMEGA32__log_initUart67:
0x0562	0xE1B9    	LDI        R27, 25
0x0564	0xB9B9    	OUT        UBRRL+0, R27
0x0566	0xE0B0    	LDI        R27, 0
0x0568	0xBDB0    	OUT        UBRRH+0, R27
0x056A	0xDE0E    	RCALL      _UART1_Init+0
0x056C	0xC067    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart64
;__ea_atmega32_log.c,67 :: 		case 38400  : UART1_Init(38400);  break;
L_easyavr_v7_ATMEGA32__log_initUart68:
0x056E	0xE0BC    	LDI        R27, 12
0x0570	0xB9B9    	OUT        UBRRL+0, R27
0x0572	0xE0B0    	LDI        R27, 0
0x0574	0xBDB0    	OUT        UBRRH+0, R27
0x0576	0xDE08    	RCALL      _UART1_Init+0
0x0578	0xC061    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart64
;__ea_atmega32_log.c,68 :: 		case 57600  : UART1_Init(57600);  break;
L_easyavr_v7_ATMEGA32__log_initUart69:
0x057A	0xB1BB    	IN         R27, U2X_bit+0
0x057C	0x60B2    	SBR        R27, 2
0x057E	0xB9BB    	OUT        U2X_bit+0, R27
0x0580	0xE1B0    	LDI        R27, 16
0x0582	0xB9B9    	OUT        UBRRL+0, R27
0x0584	0xE0B0    	LDI        R27, 0
0x0586	0xBDB0    	OUT        UBRRH+0, R27
0x0588	0xDDFF    	RCALL      _UART1_Init+0
0x058A	0xC058    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart64
;__ea_atmega32_log.c,69 :: 		case 115200 : UART1_Init(115200); break;
L_easyavr_v7_ATMEGA32__log_initUart70:
0x058C	0xB1BB    	IN         R27, U2X_bit+0
0x058E	0x60B2    	SBR        R27, 2
0x0590	0xB9BB    	OUT        U2X_bit+0, R27
0x0592	0xE0B8    	LDI        R27, 8
0x0594	0xB9B9    	OUT        UBRRL+0, R27
0x0596	0xE0B0    	LDI        R27, 0
0x0598	0xBDB0    	OUT        UBRRH+0, R27
0x059A	0xDDF6    	RCALL      _UART1_Init+0
0x059C	0xC04F    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart64
;__ea_atmega32_log.c,70 :: 		default     : _MIKROBUS_ERR_LOG;
L_easyavr_v7_ATMEGA32__log_initUart71:
;__ea_atmega32_log.c,71 :: 		}
0x059E	0xC04E    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart64
L_easyavr_v7_ATMEGA32__log_initUart63:
0x05A0	0xE0B0    	LDI        R27, 0
0x05A2	0x165B    	CP         R5, R27
0x05A4	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart235
0x05A6	0xE0B0    	LDI        R27, 0
0x05A8	0x164B    	CP         R4, R27
0x05AA	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart235
0x05AC	0xE1B2    	LDI        R27, 18
0x05AE	0x163B    	CP         R3, R27
0x05B0	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart235
0x05B2	0xECB0    	LDI        R27, 192
0x05B4	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_initUart235:
0x05B6	0xF249    	BREQ       L_easyavr_v7_ATMEGA32__log_initUart65
L_easyavr_v7_ATMEGA32__log_initUart236:
0x05B8	0xE0B0    	LDI        R27, 0
0x05BA	0x165B    	CP         R5, R27
0x05BC	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart237
0x05BE	0xE0B0    	LDI        R27, 0
0x05C0	0x164B    	CP         R4, R27
0x05C2	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart237
0x05C4	0xE2B5    	LDI        R27, 37
0x05C6	0x163B    	CP         R3, R27
0x05C8	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart237
0x05CA	0xE8B0    	LDI        R27, 128
0x05CC	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_initUart237:
0x05CE	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart238
0x05D0	0xCFC2    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart66
L_easyavr_v7_ATMEGA32__log_initUart238:
0x05D2	0xE0B0    	LDI        R27, 0
0x05D4	0x165B    	CP         R5, R27
0x05D6	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart239
0x05D8	0xE0B0    	LDI        R27, 0
0x05DA	0x164B    	CP         R4, R27
0x05DC	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart239
0x05DE	0xE4BB    	LDI        R27, 75
0x05E0	0x163B    	CP         R3, R27
0x05E2	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart239
0x05E4	0xE0B0    	LDI        R27, 0
0x05E6	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_initUart239:
0x05E8	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart240
0x05EA	0xCFBB    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart67
L_easyavr_v7_ATMEGA32__log_initUart240:
0x05EC	0xE0B0    	LDI        R27, 0
0x05EE	0x165B    	CP         R5, R27
0x05F0	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart241
0x05F2	0xE0B0    	LDI        R27, 0
0x05F4	0x164B    	CP         R4, R27
0x05F6	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart241
0x05F8	0xE9B6    	LDI        R27, 150
0x05FA	0x163B    	CP         R3, R27
0x05FC	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart241
0x05FE	0xE0B0    	LDI        R27, 0
0x0600	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_initUart241:
0x0602	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart242
0x0604	0xCFB4    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart68
L_easyavr_v7_ATMEGA32__log_initUart242:
0x0606	0xE0B0    	LDI        R27, 0
0x0608	0x165B    	CP         R5, R27
0x060A	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart243
0x060C	0xE0B0    	LDI        R27, 0
0x060E	0x164B    	CP         R4, R27
0x0610	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart243
0x0612	0xEEB1    	LDI        R27, 225
0x0614	0x163B    	CP         R3, R27
0x0616	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart243
0x0618	0xE0B0    	LDI        R27, 0
0x061A	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_initUart243:
0x061C	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart244
0x061E	0xCFAD    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart69
L_easyavr_v7_ATMEGA32__log_initUart244:
0x0620	0xE0B0    	LDI        R27, 0
0x0622	0x165B    	CP         R5, R27
0x0624	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart245
0x0626	0xE0B1    	LDI        R27, 1
0x0628	0x164B    	CP         R4, R27
0x062A	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart245
0x062C	0xECB2    	LDI        R27, 194
0x062E	0x163B    	CP         R3, R27
0x0630	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart245
0x0632	0xE0B0    	LDI        R27, 0
0x0634	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_initUart245:
0x0636	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart246
0x0638	0xCFA9    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart70
L_easyavr_v7_ATMEGA32__log_initUart246:
0x063A	0xCFB1    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart71
L_easyavr_v7_ATMEGA32__log_initUart64:
;__ea_atmega32_log.c,72 :: 		logger = UART1_Write;
0x063C	0xEEB8    	LDI        R27, lo_addr(_UART1_Write+0)
0x063E	0x00A393B0  	STS        _logger+0, R27
0x0642	0xE0B0    	LDI        R27, hi_addr(_UART1_Write+0)
0x0644	0x00A493B0  	STS        _logger+1, R27
;__ea_atmega32_log.c,73 :: 		return 0;
0x0648	0xE000    	LDI        R16, 0
;__ea_atmega32_log.c,74 :: 		}
L_end__log_initUart:
0x064A	0x9508    	RET
; end of easyavr_v7_ATMEGA32__log_initUart
_mikrobus_logWrite:
0x08FC	0x93CF    	PUSH       R28
0x08FE	0x93DF    	PUSH       R29
0x0900	0xB7CD    	IN         R28, SPL+0
0x0902	0xB7DE    	IN         R29, SPL+1
0x0904	0x9722    	SBIW       R28, 2
0x0906	0xBFCD    	OUT        SPL+0, R28
0x0908	0xBFDE    	OUT        SPL+1, R29
0x090A	0x9621    	ADIW       R28, 1
;easyavr_v7_ATMEGA32.c,319 :: 		T_mikrobus_ret mikrobus_logWrite(uint8_t* data_, T_log_format format)
;easyavr_v7_ATMEGA32.c,321 :: 		uint8_t *ptr = data_;
0x090C	0x922F    	PUSH       R2
0x090E	0x923F    	PUSH       R3
; ptr start address is: 16 (R16)
0x0910	0x0181    	MOVW       R16, R2
;easyavr_v7_ATMEGA32.c,322 :: 		uint8_t row = 13;
0x0912	0xE0BD    	LDI        R27, 13
0x0914	0x83B8    	STD        Y+0, R27
0x0916	0xE0BA    	LDI        R27, 10
0x0918	0x83B9    	STD        Y+1, R27
;easyavr_v7_ATMEGA32.c,323 :: 		uint8_t line = 10;
;easyavr_v7_ATMEGA32.c,324 :: 		switch( format )
0x091A	0xC041    	RJMP       L_mikrobus_logWrite85
;easyavr_v7_ATMEGA32.c,326 :: 		case _LOG_BYTE :
L_mikrobus_logWrite87:
;easyavr_v7_ATMEGA32.c,327 :: 		_log_write( ptr );
0x091C	0x0118    	MOVW       R2, R16
; ptr end address is: 16 (R16)
0x091E	0xDD00    	RCALL      easyavr_v7_ATMEGA32__log_write+0
;easyavr_v7_ATMEGA32.c,328 :: 		break;
0x0920	0xC04A    	RJMP       L_mikrobus_logWrite86
;easyavr_v7_ATMEGA32.c,329 :: 		case _LOG_TEXT :
L_mikrobus_logWrite88:
;easyavr_v7_ATMEGA32.c,330 :: 		while( *ptr )
; ptr start address is: 16 (R16)
0x0922	0x0198    	MOVW       R18, R16
L_mikrobus_logWrite89:
; ptr end address is: 16 (R16)
; ptr start address is: 18 (R18)
0x0924	0x01F9    	MOVW       R30, R18
0x0926	0x8100    	LD         R16, Z
0x0928	0x2300    	TST        R16
0x092A	0xF089    	BREQ       L_mikrobus_logWrite90
L__mikrobus_logWrite257:
;easyavr_v7_ATMEGA32.c,332 :: 		_log_write( ptr );
0x092C	0x933F    	PUSH       R19
0x092E	0x932F    	PUSH       R18
0x0930	0x924F    	PUSH       R4
0x0932	0x923F    	PUSH       R3
0x0934	0x922F    	PUSH       R2
0x0936	0x0119    	MOVW       R2, R18
0x0938	0xDCF3    	RCALL      easyavr_v7_ATMEGA32__log_write+0
0x093A	0x902F    	POP        R2
0x093C	0x903F    	POP        R3
0x093E	0x904F    	POP        R4
0x0940	0x912F    	POP        R18
0x0942	0x913F    	POP        R19
;easyavr_v7_ATMEGA32.c,333 :: 		ptr++;
0x0944	0x0189    	MOVW       R16, R18
0x0946	0x5F0F    	SUBI       R16, 255
0x0948	0x4F1F    	SBCI       R17, 255
0x094A	0x0198    	MOVW       R18, R16
;easyavr_v7_ATMEGA32.c,334 :: 		}
; ptr end address is: 18 (R18)
0x094C	0xCFEB    	RJMP       L_mikrobus_logWrite89
L_mikrobus_logWrite90:
;easyavr_v7_ATMEGA32.c,335 :: 		break;
0x094E	0xC033    	RJMP       L_mikrobus_logWrite86
;easyavr_v7_ATMEGA32.c,336 :: 		case _LOG_LINE :
L_mikrobus_logWrite91:
;easyavr_v7_ATMEGA32.c,337 :: 		while( *ptr )
; ptr start address is: 16 (R16)
0x0950	0x0198    	MOVW       R18, R16
L_mikrobus_logWrite92:
; ptr end address is: 16 (R16)
; ptr start address is: 18 (R18)
0x0952	0x01F9    	MOVW       R30, R18
0x0954	0x8100    	LD         R16, Z
0x0956	0x2300    	TST        R16
0x0958	0xF089    	BREQ       L_mikrobus_logWrite93
L__mikrobus_logWrite258:
;easyavr_v7_ATMEGA32.c,339 :: 		_log_write( ptr );
0x095A	0x933F    	PUSH       R19
0x095C	0x932F    	PUSH       R18
0x095E	0x924F    	PUSH       R4
0x0960	0x923F    	PUSH       R3
0x0962	0x922F    	PUSH       R2
0x0964	0x0119    	MOVW       R2, R18
0x0966	0xDCDC    	RCALL      easyavr_v7_ATMEGA32__log_write+0
0x0968	0x902F    	POP        R2
0x096A	0x903F    	POP        R3
0x096C	0x904F    	POP        R4
0x096E	0x912F    	POP        R18
0x0970	0x913F    	POP        R19
;easyavr_v7_ATMEGA32.c,340 :: 		ptr++;
0x0972	0x0189    	MOVW       R16, R18
0x0974	0x5F0F    	SUBI       R16, 255
0x0976	0x4F1F    	SBCI       R17, 255
0x0978	0x0198    	MOVW       R18, R16
;easyavr_v7_ATMEGA32.c,341 :: 		}
; ptr end address is: 18 (R18)
0x097A	0xCFEB    	RJMP       L_mikrobus_logWrite92
L_mikrobus_logWrite93:
;easyavr_v7_ATMEGA32.c,342 :: 		_log_write( &row );
0x097C	0x018E    	MOVW       R16, R28
0x097E	0x924F    	PUSH       R4
0x0980	0x923F    	PUSH       R3
0x0982	0x922F    	PUSH       R2
0x0984	0x0118    	MOVW       R2, R16
0x0986	0xDCCC    	RCALL      easyavr_v7_ATMEGA32__log_write+0
;easyavr_v7_ATMEGA32.c,343 :: 		_log_write( &line );
0x0988	0x018E    	MOVW       R16, R28
0x098A	0x5F0F    	SUBI       R16, 255
0x098C	0x4F1F    	SBCI       R17, 255
0x098E	0x0118    	MOVW       R2, R16
0x0990	0xDCC7    	RCALL      easyavr_v7_ATMEGA32__log_write+0
0x0992	0x902F    	POP        R2
0x0994	0x903F    	POP        R3
0x0996	0x904F    	POP        R4
;easyavr_v7_ATMEGA32.c,344 :: 		break;
0x0998	0xC00E    	RJMP       L_mikrobus_logWrite86
;easyavr_v7_ATMEGA32.c,345 :: 		default :
L_mikrobus_logWrite94:
;easyavr_v7_ATMEGA32.c,346 :: 		return _MIKROBUS_ERR_LOG;
0x099A	0xE006    	LDI        R16, 6
0x099C	0xC00D    	RJMP       L_end_mikrobus_logWrite
;easyavr_v7_ATMEGA32.c,347 :: 		}
L_mikrobus_logWrite85:
; ptr start address is: 16 (R16)
0x099E	0xE0B0    	LDI        R27, 0
0x09A0	0x164B    	CP         R4, R27
0x09A2	0xF409    	BRNE       L__mikrobus_logWrite259
0x09A4	0xCFBB    	RJMP       L_mikrobus_logWrite87
L__mikrobus_logWrite259:
0x09A6	0xE0B1    	LDI        R27, 1
0x09A8	0x164B    	CP         R4, R27
0x09AA	0xF409    	BRNE       L__mikrobus_logWrite260
0x09AC	0xCFBA    	RJMP       L_mikrobus_logWrite88
L__mikrobus_logWrite260:
0x09AE	0xE0B2    	LDI        R27, 2
0x09B0	0x164B    	CP         R4, R27
0x09B2	0xF271    	BREQ       L_mikrobus_logWrite91
L__mikrobus_logWrite261:
; ptr end address is: 16 (R16)
0x09B4	0xCFF2    	RJMP       L_mikrobus_logWrite94
L_mikrobus_logWrite86:
;easyavr_v7_ATMEGA32.c,348 :: 		return 0;
0x09B6	0xE000    	LDI        R16, 0
;easyavr_v7_ATMEGA32.c,349 :: 		}
;easyavr_v7_ATMEGA32.c,348 :: 		return 0;
;easyavr_v7_ATMEGA32.c,349 :: 		}
L_end_mikrobus_logWrite:
0x09B8	0x903F    	POP        R3
0x09BA	0x902F    	POP        R2
0x09BC	0x9621    	ADIW       R28, 1
0x09BE	0xBFCD    	OUT        SPL+0, R28
0x09C0	0xBFDE    	OUT        SPL+1, R29
0x09C2	0x91DF    	POP        R29
0x09C4	0x91CF    	POP        R28
0x09C6	0x9508    	RET
; end of _mikrobus_logWrite
easyavr_v7_ATMEGA32__log_write:
;__ea_atmega32_log.c,17 :: 		static T_mikrobus_ret _log_write(uint8_t *data_)
;__ea_atmega32_log.c,19 :: 		logger( *data_ );
0x0320	0x922F    	PUSH       R2
0x0322	0x923F    	PUSH       R3
0x0324	0x01F1    	MOVW       R30, R2
0x0326	0x8100    	LD         R16, Z
0x0328	0x2E20    	MOV        R2, R16
0x032A	0x00A391E0  	LDS        R30, _logger+0
0x032E	0x00A491F0  	LDS        R31, _logger+1
0x0332	0x9509    	ICALL
;__ea_atmega32_log.c,20 :: 		return 0;
0x0334	0xE000    	LDI        R16, 0
;__ea_atmega32_log.c,21 :: 		}
;__ea_atmega32_log.c,20 :: 		return 0;
;__ea_atmega32_log.c,21 :: 		}
L_end__log_write:
0x0336	0x903F    	POP        R3
0x0338	0x902F    	POP        R2
0x033A	0x9508    	RET
; end of easyavr_v7_ATMEGA32__log_write
_UART1_Write:
;__Lib_UART_d01_ursel.c,58 :: 		
;__Lib_UART_d01_ursel.c,59 :: 		
L_UART1_Write0:
0x01D0	0xB1BB    	IN         R27, UDRE0_bit+0
0x01D2	0xFDB5    	SBRC       R27, 5
0x01D4	0xC001    	RJMP       L_UART1_Write1
;__Lib_UART_d01_ursel.c,60 :: 		
0x01D6	0xCFFC    	RJMP       L_UART1_Write0
L_UART1_Write1:
;__Lib_UART_d01_ursel.c,61 :: 		
0x01D8	0xB1BB    	IN         R27, TXC0_bit+0
0x01DA	0xFFB6    	SBRS       R27, 6
0x01DC	0xC003    	RJMP       L_UART1_Write2
;__Lib_UART_d01_ursel.c,62 :: 		
0x01DE	0xB1BB    	IN         R27, TXC0_bit+0
0x01E0	0x64B0    	SBR        R27, 64
0x01E2	0xB9BB    	OUT        TXC0_bit+0, R27
L_UART1_Write2:
;__Lib_UART_d01_ursel.c,63 :: 		
0x01E4	0xB82C    	OUT        UDR0+0, R2
;__Lib_UART_d01_ursel.c,64 :: 		
L_end_UART1_Write:
0x01E6	0x9508    	RET
; end of _UART1_Write
easyavr_v7_ATMEGA32__setAN_1:
;__ea_atmega32_gpio.c,43 :: 		static void _setAN_1  (uint8_t value) 	{ PORTA7_bit = value; }
0x01E8	0xFA20    	BST        R2, 0
0x01EA	0xB3BB    	IN         R27, PORTA7_bit+0
0x01EC	0xF9B7    	BLD        R27, 7
0x01EE	0xBBBB    	OUT        PORTA7_bit+0, R27
L_end__setAN_1:
0x01F0	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setAN_1
easyavr_v7_ATMEGA32__setRST_1:
;__ea_atmega32_gpio.c,44 :: 		static void _setRST_1 (uint8_t value) 	{ PORTA6_bit = value; }
0x017E	0xFA20    	BST        R2, 0
0x0180	0xB3BB    	IN         R27, PORTA6_bit+0
0x0182	0xF9B6    	BLD        R27, 6
0x0184	0xBBBB    	OUT        PORTA6_bit+0, R27
L_end__setRST_1:
0x0186	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setRST_1
easyavr_v7_ATMEGA32__setCS_1:
;__ea_atmega32_gpio.c,45 :: 		static void _setCS_1  (uint8_t value) 	{ PORTA5_bit = value; }
0x0160	0xFA20    	BST        R2, 0
0x0162	0xB3BB    	IN         R27, PORTA5_bit+0
0x0164	0xF9B5    	BLD        R27, 5
0x0166	0xBBBB    	OUT        PORTA5_bit+0, R27
L_end__setCS_1:
0x0168	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setCS_1
easyavr_v7_ATMEGA32__setSCK_1:
;__ea_atmega32_gpio.c,46 :: 		static void _setSCK_1 (uint8_t value) 	{ PORTB7_bit = value; }
0x016A	0xFA20    	BST        R2, 0
0x016C	0xB3B8    	IN         R27, PORTB7_bit+0
0x016E	0xF9B7    	BLD        R27, 7
0x0170	0xBBB8    	OUT        PORTB7_bit+0, R27
L_end__setSCK_1:
0x0172	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setSCK_1
easyavr_v7_ATMEGA32__setMISO_1:
;__ea_atmega32_gpio.c,47 :: 		static void _setMISO_1(uint8_t value) 	{ PORTB6_bit = value; }
0x0174	0xFA20    	BST        R2, 0
0x0176	0xB3B8    	IN         R27, PORTB6_bit+0
0x0178	0xF9B6    	BLD        R27, 6
0x017A	0xBBB8    	OUT        PORTB6_bit+0, R27
L_end__setMISO_1:
0x017C	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setMISO_1
easyavr_v7_ATMEGA32__setMOSI_1:
;__ea_atmega32_gpio.c,48 :: 		static void _setMOSI_1(uint8_t value) 	{ PORTB5_bit = value; }
0x01F2	0xFA20    	BST        R2, 0
0x01F4	0xB3B8    	IN         R27, PORTB5_bit+0
0x01F6	0xF9B5    	BLD        R27, 5
0x01F8	0xBBB8    	OUT        PORTB5_bit+0, R27
L_end__setMOSI_1:
0x01FA	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setMOSI_1
easyavr_v7_ATMEGA32__setPWM_1:
;__ea_atmega32_gpio.c,49 :: 		static void _setPWM_1 (uint8_t value) 	{ PORTD4_bit = value; }
0x0224	0xFA20    	BST        R2, 0
0x0226	0xB3B2    	IN         R27, PORTD4_bit+0
0x0228	0xF9B4    	BLD        R27, 4
0x022A	0xBBB2    	OUT        PORTD4_bit+0, R27
L_end__setPWM_1:
0x022C	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setPWM_1
easyavr_v7_ATMEGA32__setINT_1:
;__ea_atmega32_gpio.c,50 :: 		static void _setINT_1 (uint8_t value) 	{ PORTD2_bit = value; }
0x022E	0xFA20    	BST        R2, 0
0x0230	0xB3B2    	IN         R27, PORTD2_bit+0
0x0232	0xF9B2    	BLD        R27, 2
0x0234	0xBBB2    	OUT        PORTD2_bit+0, R27
L_end__setINT_1:
0x0236	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setINT_1
easyavr_v7_ATMEGA32__setRX_1:
;__ea_atmega32_gpio.c,51 :: 		static void _setRX_1  (uint8_t value) 	{ PORTD0_bit = value; }
0x0238	0xFA20    	BST        R2, 0
0x023A	0xB3B2    	IN         R27, PORTD0_bit+0
0x023C	0xF9B0    	BLD        R27, 0
0x023E	0xBBB2    	OUT        PORTD0_bit+0, R27
L_end__setRX_1:
0x0240	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setRX_1
easyavr_v7_ATMEGA32__setTX_1:
;__ea_atmega32_gpio.c,52 :: 		static void _setTX_1  (uint8_t value) 	{ PORTD1_bit = value; }
0x021A	0xFA20    	BST        R2, 0
0x021C	0xB3B2    	IN         R27, PORTD1_bit+0
0x021E	0xF9B1    	BLD        R27, 1
0x0220	0xBBB2    	OUT        PORTD1_bit+0, R27
L_end__setTX_1:
0x0222	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setTX_1
easyavr_v7_ATMEGA32__setSCL_1:
;__ea_atmega32_gpio.c,53 :: 		static void _setSCL_1 (uint8_t value) 	{ PORTC0_bit = value; }
0x01FC	0xFA20    	BST        R2, 0
0x01FE	0xB3B5    	IN         R27, PORTC0_bit+0
0x0200	0xF9B0    	BLD        R27, 0
0x0202	0xBBB5    	OUT        PORTC0_bit+0, R27
L_end__setSCL_1:
0x0204	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setSCL_1
easyavr_v7_ATMEGA32__setSDA_1:
;__ea_atmega32_gpio.c,54 :: 		static void _setSDA_1 (uint8_t value) 	{ PORTC1_bit = value; }
0x0206	0xFA20    	BST        R2, 0
0x0208	0xB3B5    	IN         R27, PORTC1_bit+0
0x020A	0xF9B1    	BLD        R27, 1
0x020C	0xBBB5    	OUT        PORTC1_bit+0, R27
L_end__setSDA_1:
0x020E	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setSDA_1
easyavr_v7_ATMEGA32__setAN_2:
;__ea_atmega32_gpio.c,68 :: 		static void _setAN_2  (uint8_t value)   { PORTA0_bit = value; }
0x0210	0xFA20    	BST        R2, 0
0x0212	0xB3BB    	IN         R27, PORTA0_bit+0
0x0214	0xF9B0    	BLD        R27, 0
0x0216	0xBBBB    	OUT        PORTA0_bit+0, R27
L_end__setAN_2:
0x0218	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setAN_2
easyavr_v7_ATMEGA32__setRST_2:
;__ea_atmega32_gpio.c,69 :: 		static void _setRST_2 (uint8_t value)   { PORTA1_bit = value; }
0x00A4	0xFA20    	BST        R2, 0
0x00A6	0xB3BB    	IN         R27, PORTA1_bit+0
0x00A8	0xF9B1    	BLD        R27, 1
0x00AA	0xBBBB    	OUT        PORTA1_bit+0, R27
L_end__setRST_2:
0x00AC	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setRST_2
easyavr_v7_ATMEGA32__setCS_2:
;__ea_atmega32_gpio.c,70 :: 		static void _setCS_2  (uint8_t value)   { PORTA3_bit = value; }
0x009A	0xFA20    	BST        R2, 0
0x009C	0xB3BB    	IN         R27, PORTA3_bit+0
0x009E	0xF9B3    	BLD        R27, 3
0x00A0	0xBBBB    	OUT        PORTA3_bit+0, R27
L_end__setCS_2:
0x00A2	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setCS_2
easyavr_v7_ATMEGA32__setSCK_2:
;__ea_atmega32_gpio.c,71 :: 		static void _setSCK_2 (uint8_t value)   { PORTB7_bit = value; }
0x0090	0xFA20    	BST        R2, 0
0x0092	0xB3B8    	IN         R27, PORTB7_bit+0
0x0094	0xF9B7    	BLD        R27, 7
0x0096	0xBBB8    	OUT        PORTB7_bit+0, R27
L_end__setSCK_2:
0x0098	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setSCK_2
easyavr_v7_ATMEGA32__setMISO_2:
;__ea_atmega32_gpio.c,72 :: 		static void _setMISO_2(uint8_t value)   { PORTB6_bit = value; }
0x00C2	0xFA20    	BST        R2, 0
0x00C4	0xB3B8    	IN         R27, PORTB6_bit+0
0x00C6	0xF9B6    	BLD        R27, 6
0x00C8	0xBBB8    	OUT        PORTB6_bit+0, R27
L_end__setMISO_2:
0x00CA	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setMISO_2
easyavr_v7_ATMEGA32__setMOSI_2:
;__ea_atmega32_gpio.c,73 :: 		static void _setMOSI_2(uint8_t value)   { PORTB5_bit = value; }
0x00B8	0xFA20    	BST        R2, 0
0x00BA	0xB3B8    	IN         R27, PORTB5_bit+0
0x00BC	0xF9B5    	BLD        R27, 5
0x00BE	0xBBB8    	OUT        PORTB5_bit+0, R27
L_end__setMOSI_2:
0x00C0	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setMOSI_2
easyavr_v7_ATMEGA32__setPWM_2:
;__ea_atmega32_gpio.c,74 :: 		static void _setPWM_2 (uint8_t value)   { PORTD5_bit = value; }
0x00AE	0xFA20    	BST        R2, 0
0x00B0	0xB3B2    	IN         R27, PORTD5_bit+0
0x00B2	0xF9B5    	BLD        R27, 5
0x00B4	0xBBB2    	OUT        PORTD5_bit+0, R27
L_end__setPWM_2:
0x00B6	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setPWM_2
easyavr_v7_ATMEGA32__setINT_2:
;__ea_atmega32_gpio.c,75 :: 		static void _setINT_2 (uint8_t value)   { PORTD3_bit = value; }
0x0068	0xFA20    	BST        R2, 0
0x006A	0xB3B2    	IN         R27, PORTD3_bit+0
0x006C	0xF9B3    	BLD        R27, 3
0x006E	0xBBB2    	OUT        PORTD3_bit+0, R27
L_end__setINT_2:
0x0070	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setINT_2
easyavr_v7_ATMEGA32__setRX_2:
;__ea_atmega32_gpio.c,76 :: 		static void _setRX_2  (uint8_t value)   { PORTD0_bit = value; }
0x005E	0xFA20    	BST        R2, 0
0x0060	0xB3B2    	IN         R27, PORTD0_bit+0
0x0062	0xF9B0    	BLD        R27, 0
0x0064	0xBBB2    	OUT        PORTD0_bit+0, R27
L_end__setRX_2:
0x0066	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setRX_2
easyavr_v7_ATMEGA32__setTX_2:
;__ea_atmega32_gpio.c,77 :: 		static void _setTX_2  (uint8_t value)   { PORTD1_bit = value; }
0x0054	0xFA20    	BST        R2, 0
0x0056	0xB3B2    	IN         R27, PORTD1_bit+0
0x0058	0xF9B1    	BLD        R27, 1
0x005A	0xBBB2    	OUT        PORTD1_bit+0, R27
L_end__setTX_2:
0x005C	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setTX_2
easyavr_v7_ATMEGA32__setSCL_2:
;__ea_atmega32_gpio.c,78 :: 		static void _setSCL_2 (uint8_t value)   { PORTC0_bit = value; }
0x0086	0xFA20    	BST        R2, 0
0x0088	0xB3B5    	IN         R27, PORTC0_bit+0
0x008A	0xF9B0    	BLD        R27, 0
0x008C	0xBBB5    	OUT        PORTC0_bit+0, R27
L_end__setSCL_2:
0x008E	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setSCL_2
easyavr_v7_ATMEGA32__setSDA_2:
;__ea_atmega32_gpio.c,79 :: 		static void _setSDA_2 (uint8_t value)   { PORTC1_bit = value; }
0x007C	0xFA20    	BST        R2, 0
0x007E	0xB3B5    	IN         R27, PORTC1_bit+0
0x0080	0xF9B1    	BLD        R27, 1
0x0082	0xBBB5    	OUT        PORTC1_bit+0, R27
L_end__setSDA_2:
0x0084	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setSDA_2
easyavr_v7_ATMEGA32__setAN_3:
;__ea_atmega32_gpio.c,93 :: 		static void _setAN_3  (uint8_t value)   { PORTA4_bit = value; }
0x0072	0xFA20    	BST        R2, 0
0x0074	0xB3BB    	IN         R27, PORTA4_bit+0
0x0076	0xF9B4    	BLD        R27, 4
0x0078	0xBBBB    	OUT        PORTA4_bit+0, R27
L_end__setAN_3:
0x007A	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setAN_3
easyavr_v7_ATMEGA32__setRST_3:
;__ea_atmega32_gpio.c,94 :: 		static void _setRST_3 (uint8_t value)   { PORTB0_bit = value; }
0x0138	0xFA20    	BST        R2, 0
0x013A	0xB3B8    	IN         R27, PORTB0_bit+0
0x013C	0xF9B0    	BLD        R27, 0
0x013E	0xBBB8    	OUT        PORTB0_bit+0, R27
L_end__setRST_3:
0x0140	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setRST_3
easyavr_v7_ATMEGA32__setCS_3:
;__ea_atmega32_gpio.c,95 :: 		static void _setCS_3  (uint8_t value)   { PORTB4_bit = value; }
0x012E	0xFA20    	BST        R2, 0
0x0130	0xB3B8    	IN         R27, PORTB4_bit+0
0x0132	0xF9B4    	BLD        R27, 4
0x0134	0xBBB8    	OUT        PORTB4_bit+0, R27
L_end__setCS_3:
0x0136	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setCS_3
easyavr_v7_ATMEGA32__setSCK_3:
;__ea_atmega32_gpio.c,96 :: 		static void _setSCK_3 (uint8_t value)   { PORTB7_bit = value; }
0x0124	0xFA20    	BST        R2, 0
0x0126	0xB3B8    	IN         R27, PORTB7_bit+0
0x0128	0xF9B7    	BLD        R27, 7
0x012A	0xBBB8    	OUT        PORTB7_bit+0, R27
L_end__setSCK_3:
0x012C	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setSCK_3
easyavr_v7_ATMEGA32__setMISO_3:
;__ea_atmega32_gpio.c,97 :: 		static void _setMISO_3(uint8_t value)   { PORTB6_bit = value; }
0x0156	0xFA20    	BST        R2, 0
0x0158	0xB3B8    	IN         R27, PORTB6_bit+0
0x015A	0xF9B6    	BLD        R27, 6
0x015C	0xBBB8    	OUT        PORTB6_bit+0, R27
L_end__setMISO_3:
0x015E	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setMISO_3
easyavr_v7_ATMEGA32__setMOSI_3:
;__ea_atmega32_gpio.c,98 :: 		static void _setMOSI_3(uint8_t value)   { PORTB5_bit = value; }
0x014C	0xFA20    	BST        R2, 0
0x014E	0xB3B8    	IN         R27, PORTB5_bit+0
0x0150	0xF9B5    	BLD        R27, 5
0x0152	0xBBB8    	OUT        PORTB5_bit+0, R27
L_end__setMOSI_3:
0x0154	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setMOSI_3
easyavr_v7_ATMEGA32__setPWM_3:
;__ea_atmega32_gpio.c,99 :: 		static void _setPWM_3 (uint8_t value)   { PORTB3_bit = value; }
0x0142	0xFA20    	BST        R2, 0
0x0144	0xB3B8    	IN         R27, PORTB3_bit+0
0x0146	0xF9B3    	BLD        R27, 3
0x0148	0xBBB8    	OUT        PORTB3_bit+0, R27
L_end__setPWM_3:
0x014A	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setPWM_3
easyavr_v7_ATMEGA32__setINT_3:
;__ea_atmega32_gpio.c,100 :: 		static void _setINT_3 (uint8_t value)   { PORTB2_bit = value; }
0x00E0	0xFA20    	BST        R2, 0
0x00E2	0xB3B8    	IN         R27, PORTB2_bit+0
0x00E4	0xF9B2    	BLD        R27, 2
0x00E6	0xBBB8    	OUT        PORTB2_bit+0, R27
L_end__setINT_3:
0x00E8	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setINT_3
easyavr_v7_ATMEGA32__setRX_3:
;__ea_atmega32_gpio.c,101 :: 		static void _setRX_3  (uint8_t value)   { PORTD2_bit = value; }
0x00D6	0xFA20    	BST        R2, 0
0x00D8	0xB3B2    	IN         R27, PORTD2_bit+0
0x00DA	0xF9B2    	BLD        R27, 2
0x00DC	0xBBB2    	OUT        PORTD2_bit+0, R27
L_end__setRX_3:
0x00DE	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setRX_3
easyavr_v7_ATMEGA32__setTX_3:
;__ea_atmega32_gpio.c,102 :: 		static void _setTX_3  (uint8_t value)   { PORTD3_bit = value; }
0x00CC	0xFA20    	BST        R2, 0
0x00CE	0xB3B2    	IN         R27, PORTD3_bit+0
0x00D0	0xF9B3    	BLD        R27, 3
0x00D2	0xBBB2    	OUT        PORTD3_bit+0, R27
L_end__setTX_3:
0x00D4	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setTX_3
easyavr_v7_ATMEGA32__setSCL_3:
;__ea_atmega32_gpio.c,103 :: 		static void _setSCL_3 (uint8_t value)   { PORTC0_bit = value; }
0x011A	0xFA20    	BST        R2, 0
0x011C	0xB3B5    	IN         R27, PORTC0_bit+0
0x011E	0xF9B0    	BLD        R27, 0
0x0120	0xBBB5    	OUT        PORTC0_bit+0, R27
L_end__setSCL_3:
0x0122	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setSCL_3
easyavr_v7_ATMEGA32__setSDA_3:
;__ea_atmega32_gpio.c,104 :: 		static void _setSDA_3 (uint8_t value)   { PORTC1_bit = value; }
0x0110	0xFA20    	BST        R2, 0
0x0112	0xB3B5    	IN         R27, PORTC1_bit+0
0x0114	0xF9B1    	BLD        R27, 1
0x0116	0xBBB5    	OUT        PORTC1_bit+0, R27
L_end__setSDA_3:
0x0118	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setSDA_3
_Delay_100ms:
;__Lib_Delays.c,46 :: 		void Delay_100ms() {
;__Lib_Delays.c,47 :: 		Delay_ms(100);
0x09CC	0xE025    	LDI        R18, 5
0x09CE	0xE01F    	LDI        R17, 15
0x09D0	0xEF02    	LDI        R16, 242
L_Delay_100ms20:
0x09D2	0x950A    	DEC        R16
0x09D4	0xF7F1    	BRNE       L_Delay_100ms20
0x09D6	0x951A    	DEC        R17
0x09D8	0xF7E1    	BRNE       L_Delay_100ms20
0x09DA	0x952A    	DEC        R18
0x09DC	0xF7D1    	BRNE       L_Delay_100ms20
;__Lib_Delays.c,48 :: 		}
L_end_Delay_100ms:
0x09DE	0x9508    	RET
; end of _Delay_100ms
_applicationInit:
;Click_AnalogKey_AVR.c,38 :: 		void applicationInit()
;Click_AnalogKey_AVR.c,41 :: 		analogkey_gpioDriverInit( (T_ANALOGKEY_P)&_MIKROBUS1_GPIO );
0x0A84	0x922F    	PUSH       R2
0x0A86	0x923F    	PUSH       R3
0x0A88	0x924F    	PUSH       R4
0x0A8A	0xEEBD    	LDI        R27, lo_addr(__MIKROBUS1_GPIO+0)
0x0A8C	0x2E2B    	MOV        R2, R27
0x0A8E	0xE0BB    	LDI        R27, hi_addr(__MIKROBUS1_GPIO+0)
0x0A90	0x2E3B    	MOV        R3, R27
0x0A92	0xDF9A    	RCALL      _analogkey_gpioDriverInit+0
;Click_AnalogKey_AVR.c,42 :: 		analogkey_setResolution(_ANALOGKEY_ADC_RESOLUTION_10bit);
0x0A94	0xE0B1    	LDI        R27, 1
0x0A96	0x2E2B    	MOV        R2, R27
0x0A98	0xDFD9    	RCALL      _analogkey_setResolution+0
;Click_AnalogKey_AVR.c,44 :: 		analogkey_adcSetInputChannel();
0x0A9A	0xDFD7    	RCALL      _analogkey_adcSetInputChannel+0
;Click_AnalogKey_AVR.c,45 :: 		analogkey_adcInit();
0x0A9C	0xDFD4    	RCALL      _analogkey_adcInit+0
;Click_AnalogKey_AVR.c,46 :: 		Delay_100ms();
0x0A9E	0xDF96    	RCALL      _Delay_100ms+0
;Click_AnalogKey_AVR.c,48 :: 		mikrobus_logWrite("Press the button :D", _LOG_LINE);
0x0AA0	0xE0B2    	LDI        R27, 2
0x0AA2	0x2E4B    	MOV        R4, R27
0x0AA4	0xE7B9    	LDI        R27, lo_addr(?lstr2_Click_AnalogKey_AVR+0)
0x0AA6	0x2E2B    	MOV        R2, R27
0x0AA8	0xE0B0    	LDI        R27, hi_addr(?lstr2_Click_AnalogKey_AVR+0)
0x0AAA	0x2E3B    	MOV        R3, R27
0x0AAC	0xDF27    	RCALL      _mikrobus_logWrite+0
;Click_AnalogKey_AVR.c,49 :: 		}
L_end_applicationInit:
0x0AAE	0x904F    	POP        R4
0x0AB0	0x903F    	POP        R3
0x0AB2	0x902F    	POP        R2
0x0AB4	0x9508    	RET
; end of _applicationInit
_analogkey_gpioDriverInit:
;__analogkey_Driver.c,78 :: 		void analogkey_gpioDriverInit(T_ANALOGKEY_P gpioObj)
;__analogkey_Driver.c,80 :: 		hal_gpioMap( (T_HAL_P)gpioObj );
0x09C8	0xDC47    	RCALL      __analogkey_Driver_hal_gpioMap+0
;__analogkey_Driver.c,81 :: 		}
L_end_analogkey_gpioDriverInit:
0x09CA	0x9508    	RET
; end of _analogkey_gpioDriverInit
__analogkey_Driver_hal_gpioMap:
;__analogkey_hal.c,321 :: 		static void hal_gpioMap(T_HAL_P gpioObj)
;__analogkey_hal.c,397 :: 		}
L_end_hal_gpioMap:
0x0258	0x9508    	RET
; end of __analogkey_Driver_hal_gpioMap
_analogkey_setResolution:
;__analogkey_Driver.c,114 :: 		void analogkey_setResolution(uint8_t resolution)
;__analogkey_Driver.c,116 :: 		if(resolution == _ANALOGKEY_ADC_RESOLUTION_10bit)
0x0A4C	0xE0B1    	LDI        R27, 1
0x0A4E	0x162B    	CP         R2, R27
0x0A50	0xF451    	BRNE       L_analogkey_setResolution23
L__analogkey_setResolution59:
;__analogkey_Driver.c,118 :: 		_maxADC = 1023;
0x0A52	0xEFBF    	LDI        R27, 255
0x0A54	0x006193B0  	STS        __analogkey_Driver__maxADC+0, R27
0x0A58	0xE0B3    	LDI        R27, 3
0x0A5A	0x006293B0  	STS        __analogkey_Driver__maxADC+1, R27
;__analogkey_Driver.c,119 :: 		_prec = 51;
0x0A5E	0xE3B3    	LDI        R27, 51
0x0A60	0x006093B0  	STS        __analogkey_Driver__prec+0, R27
;__analogkey_Driver.c,120 :: 		}
0x0A64	0xC009    	RJMP       L_analogkey_setResolution24
L_analogkey_setResolution23:
;__analogkey_Driver.c,123 :: 		_maxADC = 4095;
0x0A66	0xEFBF    	LDI        R27, 255
0x0A68	0x006193B0  	STS        __analogkey_Driver__maxADC+0, R27
0x0A6C	0xE0BF    	LDI        R27, 15
0x0A6E	0x006293B0  	STS        __analogkey_Driver__maxADC+1, R27
;__analogkey_Driver.c,124 :: 		_prec = 205;
0x0A72	0xECBD    	LDI        R27, 205
0x0A74	0x006093B0  	STS        __analogkey_Driver__prec+0, R27
;__analogkey_Driver.c,125 :: 		}
L_analogkey_setResolution24:
;__analogkey_Driver.c,126 :: 		}
L_end_analogkey_setResolution:
0x0A78	0x9508    	RET
; end of _analogkey_setResolution
_analogkey_adcSetInputChannel:
;click_analogkey_adc.h,9 :: 		void analogkey_adcSetInputChannel()
;click_analogkey_adc.h,12 :: 		}
L_end_analogkey_adcSetInputChannel:
0x0A4A	0x9508    	RET
; end of _analogkey_adcSetInputChannel
_analogkey_adcInit:
;click_analogkey_adc.h,4 :: 		void analogkey_adcInit()
;click_analogkey_adc.h,6 :: 		ADC_Init();
0x0A46	0xDBFD    	RCALL      _ADC_Init+0
;click_analogkey_adc.h,7 :: 		}
L_end_analogkey_adcInit:
0x0A48	0x9508    	RET
; end of _analogkey_adcInit
_ADC_Init:
;__Lib_ADC_ref3.c,17 :: 		
;__Lib_ADC_ref3.c,18 :: 		
0x0242	0xE7B5    	LDI        R27, lo_addr(_ADC_Get_Sample+0)
0x0244	0x00A193B0  	STS        _ADC_Get_Sample_Ptr+0, R27
0x0248	0xE0B0    	LDI        R27, hi_addr(_ADC_Get_Sample+0)
0x024A	0x00A293B0  	STS        _ADC_Get_Sample_Ptr+1, R27
;__Lib_ADC_ref3.c,19 :: 		
0x024E	0xE8B7    	LDI        R27, 135
0x0250	0xB9B6    	OUT        ADCSRA+0, R27
;__Lib_ADC_ref3.c,25 :: 		
0x0252	0xE0B0    	LDI        R27, 0
0x0254	0xB9B7    	OUT        ADMUX+0, R27
;__Lib_ADC_ref3.c,28 :: 		
L_end_ADC_Init:
0x0256	0x9508    	RET
; end of _ADC_Init
_applicationTask:
0x0AF0	0x93CF    	PUSH       R28
0x0AF2	0x93DF    	PUSH       R29
0x0AF4	0xB7CD    	IN         R28, SPL+0
0x0AF6	0xB7DE    	IN         R29, SPL+1
0x0AF8	0x97E2    	SBIW       R28, 50
0x0AFA	0xBFCD    	OUT        SPL+0, R28
0x0AFC	0xBFDE    	OUT        SPL+1, R29
0x0AFE	0x9621    	ADIW       R28, 1
;Click_AnalogKey_AVR.c,51 :: 		void applicationTask()
;Click_AnalogKey_AVR.c,57 :: 		uint16_t sumValue = 0;
0x0B00	0x922F    	PUSH       R2
0x0B02	0x923F    	PUSH       R3
0x0B04	0x924F    	PUSH       R4
0x0B06	0x925F    	PUSH       R5
; sumValue start address is: 21 (R21)
0x0B08	0xE050    	LDI        R21, 0
0x0B0A	0xE060    	LDI        R22, 0
;Click_AnalogKey_AVR.c,59 :: 		for(cnt = 0; cnt < 5; cnt++)
; cnt start address is: 20 (R20)
0x0B0C	0xE040    	LDI        R20, 0
; sumValue end address is: 21 (R21)
; cnt end address is: 20 (R20)
L_applicationTask0:
; cnt start address is: 20 (R20)
; sumValue start address is: 21 (R21)
0x0B0E	0x3045    	CPI        R20, 5
0x0B10	0xF480    	BRSH       L_applicationTask1
L__applicationTask14:
;Click_AnalogKey_AVR.c,61 :: 		ADC_value = analogkey_adcRead();
0x0B12	0x936F    	PUSH       R22
0x0B14	0x935F    	PUSH       R21
0x0B16	0x934F    	PUSH       R20
0x0B18	0xDDF9    	RCALL      _analogkey_adcRead+0
0x0B1A	0x914F    	POP        R20
0x0B1C	0x915F    	POP        R21
0x0B1E	0x916F    	POP        R22
;Click_AnalogKey_AVR.c,62 :: 		sumValue += ADC_value;
0x0B20	0x0F05    	ADD        R16, R21
0x0B22	0x1F16    	ADC        R17, R22
0x0B24	0x2F50    	MOV        R21, R16
0x0B26	0x2F61    	MOV        R22, R17
;Click_AnalogKey_AVR.c,63 :: 		Delay_10ms();
0x0B28	0xDEE2    	RCALL      _Delay_10ms+0
;Click_AnalogKey_AVR.c,59 :: 		for(cnt = 0; cnt < 5; cnt++)
0x0B2A	0x2F04    	MOV        R16, R20
0x0B2C	0x5F0F    	SUBI       R16, 255
0x0B2E	0x2F40    	MOV        R20, R16
;Click_AnalogKey_AVR.c,64 :: 		}
; cnt end address is: 20 (R20)
0x0B30	0xCFEE    	RJMP       L_applicationTask0
L_applicationTask1:
;Click_AnalogKey_AVR.c,65 :: 		ADC_value = sumValue / 5;
0x0B32	0x2F05    	MOV        R16, R21
0x0B34	0x2F16    	MOV        R17, R22
0x0B36	0xE045    	LDI        R20, 5
0x0B38	0xE050    	LDI        R21, 0
0x0B3A	0xDBDE    	RCALL      _Div_16x16_U+0
0x0B3C	0x018C    	MOVW       R16, R24
; sumValue end address is: 21 (R21)
;Click_AnalogKey_AVR.c,66 :: 		isKey = analogkey_getKey(ADC_value);
0x0B3E	0x0118    	MOVW       R2, R16
0x0B40	0xDDF0    	RCALL      _analogkey_getKey+0
; isKey start address is: 18 (R18)
0x0B42	0x2F20    	MOV        R18, R16
;Click_AnalogKey_AVR.c,68 :: 		if(isKey != _ANALOGKEY_NO_TOUCH)
0x0B44	0x3000    	CPI        R16, 0
0x0B46	0xF091    	BREQ       L_applicationTask3
L__applicationTask15:
;Click_AnalogKey_AVR.c,70 :: 		IntToStr(isKey, demoText);
0x0B48	0x018E    	MOVW       R16, R28
0x0B4A	0x0128    	MOVW       R4, R16
0x0B4C	0x2E22    	MOV        R2, R18
0x0B4E	0xE0B0    	LDI        R27, 0
0x0B50	0x2E3B    	MOV        R3, R27
; isKey end address is: 18 (R18)
0x0B52	0xDD7C    	RCALL      _IntToStr+0
;Click_AnalogKey_AVR.c,71 :: 		mikrobus_logWrite("Pressed the button : ", _LOG_TEXT);
0x0B54	0xE0B1    	LDI        R27, 1
0x0B56	0x2E4B    	MOV        R4, R27
0x0B58	0xE6B3    	LDI        R27, lo_addr(?lstr3_Click_AnalogKey_AVR+0)
0x0B5A	0x2E2B    	MOV        R2, R27
0x0B5C	0xE0B0    	LDI        R27, hi_addr(?lstr3_Click_AnalogKey_AVR+0)
0x0B5E	0x2E3B    	MOV        R3, R27
0x0B60	0xDECD    	RCALL      _mikrobus_logWrite+0
;Click_AnalogKey_AVR.c,72 :: 		mikrobus_logWrite(demoText, _LOG_LINE);
0x0B62	0x018E    	MOVW       R16, R28
0x0B64	0xE0B2    	LDI        R27, 2
0x0B66	0x2E4B    	MOV        R4, R27
0x0B68	0x0118    	MOVW       R2, R16
0x0B6A	0xDEC8    	RCALL      _mikrobus_logWrite+0
;Click_AnalogKey_AVR.c,73 :: 		}
L_applicationTask3:
;Click_AnalogKey_AVR.c,74 :: 		Delay_ms( 300 );
0x0B6C	0xE02D    	LDI        R18, 13
0x0B6E	0xE21D    	LDI        R17, 45
0x0B70	0xED08    	LDI        R16, 216
L_applicationTask4:
0x0B72	0x950A    	DEC        R16
0x0B74	0xF7F1    	BRNE       L_applicationTask4
0x0B76	0x951A    	DEC        R17
0x0B78	0xF7E1    	BRNE       L_applicationTask4
0x0B7A	0x952A    	DEC        R18
0x0B7C	0xF7D1    	BRNE       L_applicationTask4
0x0B7E	0x0000    	NOP
0x0B80	0x0000    	NOP
;Click_AnalogKey_AVR.c,75 :: 		}
L_end_applicationTask:
0x0B82	0x905F    	POP        R5
0x0B84	0x904F    	POP        R4
0x0B86	0x903F    	POP        R3
0x0B88	0x902F    	POP        R2
0x0B8A	0x96E1    	ADIW       R28, 49
0x0B8C	0xBFCD    	OUT        SPL+0, R28
0x0B8E	0xBFDE    	OUT        SPL+1, R29
0x0B90	0x91DF    	POP        R29
0x0B92	0x91CF    	POP        R28
0x0B94	0x9508    	RET
; end of _applicationTask
_analogkey_adcRead:
;click_analogkey_adc.h,14 :: 		uint32_t analogkey_adcRead()
;click_analogkey_adc.h,18 :: 		adcData = ADC_Read(7);
0x070C	0x922F    	PUSH       R2
0x070E	0xE0B7    	LDI        R27, 7
0x0710	0x2E2B    	MOV        R2, R27
0x0712	0xDDA3    	RCALL      _ADC_Read+0
; adcData start address is: 20 (R20)
0x0714	0x01A8    	MOVW       R20, R16
0x0716	0xE060    	LDI        R22, 0
0x0718	0x2F76    	MOV        R23, R22
;click_analogkey_adc.h,19 :: 		return adcData;
0x071A	0x018A    	MOVW       R16, R20
0x071C	0x019B    	MOVW       R18, R22
; adcData end address is: 20 (R20)
;click_analogkey_adc.h,20 :: 		}
;click_analogkey_adc.h,19 :: 		return adcData;
;click_analogkey_adc.h,20 :: 		}
L_end_analogkey_adcRead:
0x071E	0x902F    	POP        R2
0x0720	0x9508    	RET
; end of _analogkey_adcRead
_ADC_Read:
;__Lib_ADC_ref3.c,62 :: 		
;__Lib_ADC_ref3.c,63 :: 		
0x025A	0xDFF3    	RCALL      _ADC_Init+0
;__Lib_ADC_ref3.c,64 :: 		
0x025C	0xDF46    	RCALL      _ADC_Get_Sample+0
;__Lib_ADC_ref3.c,65 :: 		
L_end_ADC_Read:
0x025E	0x9508    	RET
; end of _ADC_Read
_ADC_Get_Sample:
;__Lib_ADC_ref3.c,44 :: 		
;__Lib_ADC_ref3.c,47 :: 		
0x00EA	0xB107    	IN         R16, ADMUX+0
0x00EC	0x7E00    	ANDI       R16, 224
0x00EE	0x2902    	OR         R16, R2
0x00F0	0xB907    	OUT        ADMUX+0, R16
;__Lib_ADC_ref3.c,52 :: 		
0x00F2	0xB1B6    	IN         R27, ADSC_bit+0
0x00F4	0x64B0    	SBR        R27, 64
0x00F6	0xB9B6    	OUT        ADSC_bit+0, R27
;__Lib_ADC_ref3.c,54 :: 		
L_ADC_Get_Sample0:
0x00F8	0xB1B6    	IN         R27, ADSC_bit+0
0x00FA	0xFFB6    	SBRS       R27, 6
0x00FC	0xC001    	RJMP       L_ADC_Get_Sample1
;__Lib_ADC_ref3.c,55 :: 		
0x00FE	0xCFFC    	RJMP       L_ADC_Get_Sample0
L_ADC_Get_Sample1:
;__Lib_ADC_ref3.c,57 :: 		
; temp start address is: 18 (R18)
0x0100	0xB124    	IN         R18, ADCL+0
0x0102	0xE030    	LDI        R19, 0
;__Lib_ADC_ref3.c,58 :: 		
0x0104	0xB105    	IN         R16, ADCH+0
0x0106	0x2F10    	MOV        R17, R16
0x0108	0x2700    	CLR        R16
0x010A	0x2B02    	OR         R16, R18
0x010C	0x2B13    	OR         R17, R19
; temp end address is: 18 (R18)
;__Lib_ADC_ref3.c,59 :: 		
L_end_ADC_Get_Sample:
0x010E	0x9508    	RET
; end of _ADC_Get_Sample
_Delay_10ms:
;__Lib_Delays.c,50 :: 		void Delay_10ms() {
;__Lib_Delays.c,51 :: 		Delay_ms(10);
0x08EE	0xE618    	LDI        R17, 104
0x08F0	0xEE05    	LDI        R16, 229
L_Delay_10ms22:
0x08F2	0x950A    	DEC        R16
0x08F4	0xF7F1    	BRNE       L_Delay_10ms22
0x08F6	0x951A    	DEC        R17
0x08F8	0xF7E1    	BRNE       L_Delay_10ms22
;__Lib_Delays.c,52 :: 		}
L_end_Delay_10ms:
0x08FA	0x9508    	RET
; end of _Delay_10ms
_analogkey_getKey:
;__analogkey_Driver.c,85 :: 		uint8_t analogkey_getKey(uint16_t adcValue)
;__analogkey_Driver.c,87 :: 		if(adcValue >= (_maxADC/6 - _prec) && adcValue <= (_maxADC/6 + _prec))
0x0722	0xE046    	LDI        R20, 6
0x0724	0xE050    	LDI        R21, 0
0x0726	0x00619100  	LDS        R16, __analogkey_Driver__maxADC+0
0x072A	0x00629110  	LDS        R17, __analogkey_Driver__maxADC+1
0x072E	0xDDE4    	RCALL      _Div_16x16_U+0
0x0730	0x018C    	MOVW       R16, R24
0x0732	0x00609000  	LDS        R0, __analogkey_Driver__prec+0
0x0736	0xE0B0    	LDI        R27, 0
0x0738	0x2E1B    	MOV        R1, R27
0x073A	0x1900    	SUB        R16, R0
0x073C	0x0911    	SBC        R17, R1
0x073E	0x1620    	CP         R2, R16
0x0740	0x0631    	CPC        R3, R17
0x0742	0xF090    	BRLO       L__analogkey_getKey32
L__analogkey_getKey46:
0x0744	0xE046    	LDI        R20, 6
0x0746	0xE050    	LDI        R21, 0
0x0748	0x00619100  	LDS        R16, __analogkey_Driver__maxADC+0
0x074C	0x00629110  	LDS        R17, __analogkey_Driver__maxADC+1
0x0750	0xDDD3    	RCALL      _Div_16x16_U+0
0x0752	0x018C    	MOVW       R16, R24
0x0754	0x00609120  	LDS        R18, __analogkey_Driver__prec+0
0x0758	0x0F02    	ADD        R16, R18
0x075A	0xE0B0    	LDI        R27, 0
0x075C	0x1F1B    	ADC        R17, R27
0x075E	0x1502    	CP         R16, R2
0x0760	0x0513    	CPC        R17, R3
0x0762	0xF010    	BRLO       L__analogkey_getKey31
L__analogkey_getKey47:
L__analogkey_getKey30:
;__analogkey_Driver.c,89 :: 		return _ANALOGKEY_TOUCH_KEY_6;
0x0764	0xE006    	LDI        R16, 6
0x0766	0xC0C2    	RJMP       L_end_analogkey_getKey
;__analogkey_Driver.c,87 :: 		if(adcValue >= (_maxADC/6 - _prec) && adcValue <= (_maxADC/6 + _prec))
L__analogkey_getKey32:
L__analogkey_getKey31:
;__analogkey_Driver.c,91 :: 		else if(adcValue >= (_maxADC/6 * 2 - _prec) && adcValue <= (_maxADC/6 * 2 + _prec))
0x0768	0xE046    	LDI        R20, 6
0x076A	0xE050    	LDI        R21, 0
0x076C	0x00619100  	LDS        R16, __analogkey_Driver__maxADC+0
0x0770	0x00629110  	LDS        R17, __analogkey_Driver__maxADC+1
0x0774	0xDDC1    	RCALL      _Div_16x16_U+0
0x0776	0x018C    	MOVW       R16, R24
0x0778	0x0F00    	LSL        R16
0x077A	0x1F11    	ROL        R17
0x077C	0x00609000  	LDS        R0, __analogkey_Driver__prec+0
0x0780	0xE0B0    	LDI        R27, 0
0x0782	0x2E1B    	MOV        R1, R27
0x0784	0x1900    	SUB        R16, R0
0x0786	0x0911    	SBC        R17, R1
0x0788	0x1620    	CP         R2, R16
0x078A	0x0631    	CPC        R3, R17
0x078C	0xF0A8    	BRLO       L__analogkey_getKey34
L__analogkey_getKey48:
0x078E	0xE046    	LDI        R20, 6
0x0790	0xE050    	LDI        R21, 0
0x0792	0x00619100  	LDS        R16, __analogkey_Driver__maxADC+0
0x0796	0x00629110  	LDS        R17, __analogkey_Driver__maxADC+1
0x079A	0xDDAE    	RCALL      _Div_16x16_U+0
0x079C	0x018C    	MOVW       R16, R24
0x079E	0x0198    	MOVW       R18, R16
0x07A0	0x0F22    	LSL        R18
0x07A2	0x1F33    	ROL        R19
0x07A4	0x00609100  	LDS        R16, __analogkey_Driver__prec+0
0x07A8	0xE010    	LDI        R17, 0
0x07AA	0x0F02    	ADD        R16, R18
0x07AC	0x1F13    	ADC        R17, R19
0x07AE	0x1502    	CP         R16, R2
0x07B0	0x0513    	CPC        R17, R3
0x07B2	0xF010    	BRLO       L__analogkey_getKey33
L__analogkey_getKey49:
L__analogkey_getKey29:
;__analogkey_Driver.c,93 :: 		return _ANALOGKEY_TOUCH_KEY_5;
0x07B4	0xE005    	LDI        R16, 5
0x07B6	0xC09A    	RJMP       L_end_analogkey_getKey
;__analogkey_Driver.c,91 :: 		else if(adcValue >= (_maxADC/6 * 2 - _prec) && adcValue <= (_maxADC/6 * 2 + _prec))
L__analogkey_getKey34:
L__analogkey_getKey33:
;__analogkey_Driver.c,95 :: 		else if(adcValue >= (_maxADC/6 * 3 - _prec) && adcValue <= (_maxADC/6 * 3 + _prec))
0x07B8	0xE046    	LDI        R20, 6
0x07BA	0xE050    	LDI        R21, 0
0x07BC	0x00619100  	LDS        R16, __analogkey_Driver__maxADC+0
0x07C0	0x00629110  	LDS        R17, __analogkey_Driver__maxADC+1
0x07C4	0xDD99    	RCALL      _Div_16x16_U+0
0x07C6	0x018C    	MOVW       R16, R24
0x07C8	0xE043    	LDI        R20, 3
0x07CA	0xE050    	LDI        R21, 0
0x07CC	0xDD8D    	RCALL      _HWMul_16x16+0
0x07CE	0x00609000  	LDS        R0, __analogkey_Driver__prec+0
0x07D2	0xE0B0    	LDI        R27, 0
0x07D4	0x2E1B    	MOV        R1, R27
0x07D6	0x1900    	SUB        R16, R0
0x07D8	0x0911    	SBC        R17, R1
0x07DA	0x1620    	CP         R2, R16
0x07DC	0x0631    	CPC        R3, R17
0x07DE	0xF0A8    	BRLO       L__analogkey_getKey36
L__analogkey_getKey50:
0x07E0	0xE046    	LDI        R20, 6
0x07E2	0xE050    	LDI        R21, 0
0x07E4	0x00619100  	LDS        R16, __analogkey_Driver__maxADC+0
0x07E8	0x00629110  	LDS        R17, __analogkey_Driver__maxADC+1
0x07EC	0xDD85    	RCALL      _Div_16x16_U+0
0x07EE	0x018C    	MOVW       R16, R24
0x07F0	0xE043    	LDI        R20, 3
0x07F2	0xE050    	LDI        R21, 0
0x07F4	0xDD79    	RCALL      _HWMul_16x16+0
0x07F6	0x00609120  	LDS        R18, __analogkey_Driver__prec+0
0x07FA	0x0F02    	ADD        R16, R18
0x07FC	0xE0B0    	LDI        R27, 0
0x07FE	0x1F1B    	ADC        R17, R27
0x0800	0x1502    	CP         R16, R2
0x0802	0x0513    	CPC        R17, R3
0x0804	0xF010    	BRLO       L__analogkey_getKey35
L__analogkey_getKey51:
L__analogkey_getKey28:
;__analogkey_Driver.c,97 :: 		return _ANALOGKEY_TOUCH_KEY_4;
0x0806	0xE004    	LDI        R16, 4
0x0808	0xC071    	RJMP       L_end_analogkey_getKey
;__analogkey_Driver.c,95 :: 		else if(adcValue >= (_maxADC/6 * 3 - _prec) && adcValue <= (_maxADC/6 * 3 + _prec))
L__analogkey_getKey36:
L__analogkey_getKey35:
;__analogkey_Driver.c,99 :: 		else if(adcValue >= (_maxADC/6 * 4 - _prec) && adcValue <= (_maxADC/6 * 4 + _prec))
0x080A	0xE046    	LDI        R20, 6
0x080C	0xE050    	LDI        R21, 0
0x080E	0x00619100  	LDS        R16, __analogkey_Driver__maxADC+0
0x0812	0x00629110  	LDS        R17, __analogkey_Driver__maxADC+1
0x0816	0xDD70    	RCALL      _Div_16x16_U+0
0x0818	0x018C    	MOVW       R16, R24
0x081A	0x0F00    	LSL        R16
0x081C	0x1F11    	ROL        R17
0x081E	0x0F00    	LSL        R16
0x0820	0x1F11    	ROL        R17
0x0822	0x00609000  	LDS        R0, __analogkey_Driver__prec+0
0x0826	0xE0B0    	LDI        R27, 0
0x0828	0x2E1B    	MOV        R1, R27
0x082A	0x1900    	SUB        R16, R0
0x082C	0x0911    	SBC        R17, R1
0x082E	0x1620    	CP         R2, R16
0x0830	0x0631    	CPC        R3, R17
0x0832	0xF0B8    	BRLO       L__analogkey_getKey38
L__analogkey_getKey52:
0x0834	0xE046    	LDI        R20, 6
0x0836	0xE050    	LDI        R21, 0
0x0838	0x00619100  	LDS        R16, __analogkey_Driver__maxADC+0
0x083C	0x00629110  	LDS        R17, __analogkey_Driver__maxADC+1
0x0840	0xDD5B    	RCALL      _Div_16x16_U+0
0x0842	0x018C    	MOVW       R16, R24
0x0844	0x0198    	MOVW       R18, R16
0x0846	0x0F22    	LSL        R18
0x0848	0x1F33    	ROL        R19
0x084A	0x0F22    	LSL        R18
0x084C	0x1F33    	ROL        R19
0x084E	0x00609100  	LDS        R16, __analogkey_Driver__prec+0
0x0852	0xE010    	LDI        R17, 0
0x0854	0x0F02    	ADD        R16, R18
0x0856	0x1F13    	ADC        R17, R19
0x0858	0x1502    	CP         R16, R2
0x085A	0x0513    	CPC        R17, R3
0x085C	0xF010    	BRLO       L__analogkey_getKey37
L__analogkey_getKey53:
L__analogkey_getKey27:
;__analogkey_Driver.c,101 :: 		return _ANALOGKEY_TOUCH_KEY_3;
0x085E	0xE003    	LDI        R16, 3
0x0860	0xC045    	RJMP       L_end_analogkey_getKey
;__analogkey_Driver.c,99 :: 		else if(adcValue >= (_maxADC/6 * 4 - _prec) && adcValue <= (_maxADC/6 * 4 + _prec))
L__analogkey_getKey38:
L__analogkey_getKey37:
;__analogkey_Driver.c,103 :: 		else if(adcValue >= (_maxADC/6 * 5 - _prec) && adcValue <= (_maxADC/6 * 5 + _prec))
0x0862	0xE046    	LDI        R20, 6
0x0864	0xE050    	LDI        R21, 0
0x0866	0x00619100  	LDS        R16, __analogkey_Driver__maxADC+0
0x086A	0x00629110  	LDS        R17, __analogkey_Driver__maxADC+1
0x086E	0xDD44    	RCALL      _Div_16x16_U+0
0x0870	0x018C    	MOVW       R16, R24
0x0872	0xE045    	LDI        R20, 5
0x0874	0xE050    	LDI        R21, 0
0x0876	0xDD38    	RCALL      _HWMul_16x16+0
0x0878	0x00609000  	LDS        R0, __analogkey_Driver__prec+0
0x087C	0xE0B0    	LDI        R27, 0
0x087E	0x2E1B    	MOV        R1, R27
0x0880	0x1900    	SUB        R16, R0
0x0882	0x0911    	SBC        R17, R1
0x0884	0x1620    	CP         R2, R16
0x0886	0x0631    	CPC        R3, R17
0x0888	0xF0A8    	BRLO       L__analogkey_getKey40
L__analogkey_getKey54:
0x088A	0xE046    	LDI        R20, 6
0x088C	0xE050    	LDI        R21, 0
0x088E	0x00619100  	LDS        R16, __analogkey_Driver__maxADC+0
0x0892	0x00629110  	LDS        R17, __analogkey_Driver__maxADC+1
0x0896	0xDD30    	RCALL      _Div_16x16_U+0
0x0898	0x018C    	MOVW       R16, R24
0x089A	0xE045    	LDI        R20, 5
0x089C	0xE050    	LDI        R21, 0
0x089E	0xDD24    	RCALL      _HWMul_16x16+0
0x08A0	0x00609120  	LDS        R18, __analogkey_Driver__prec+0
0x08A4	0x0F02    	ADD        R16, R18
0x08A6	0xE0B0    	LDI        R27, 0
0x08A8	0x1F1B    	ADC        R17, R27
0x08AA	0x1502    	CP         R16, R2
0x08AC	0x0513    	CPC        R17, R3
0x08AE	0xF010    	BRLO       L__analogkey_getKey39
L__analogkey_getKey55:
L__analogkey_getKey26:
;__analogkey_Driver.c,105 :: 		return _ANALOGKEY_TOUCH_KEY_2;
0x08B0	0xE002    	LDI        R16, 2
0x08B2	0xC01C    	RJMP       L_end_analogkey_getKey
;__analogkey_Driver.c,103 :: 		else if(adcValue >= (_maxADC/6 * 5 - _prec) && adcValue <= (_maxADC/6 * 5 + _prec))
L__analogkey_getKey40:
L__analogkey_getKey39:
;__analogkey_Driver.c,107 :: 		else if(adcValue >= (_maxADC - _prec) && adcValue <= (_maxADC + _prec))
0x08B4	0x00609000  	LDS        R0, __analogkey_Driver__prec+0
0x08B8	0xE0B0    	LDI        R27, 0
0x08BA	0x2E1B    	MOV        R1, R27
0x08BC	0x00619100  	LDS        R16, __analogkey_Driver__maxADC+0
0x08C0	0x00629110  	LDS        R17, __analogkey_Driver__maxADC+1
0x08C4	0x1900    	SUB        R16, R0
0x08C6	0x0911    	SBC        R17, R1
0x08C8	0x1620    	CP         R2, R16
0x08CA	0x0631    	CPC        R3, R17
0x08CC	0xF070    	BRLO       L__analogkey_getKey42
L__analogkey_getKey56:
0x08CE	0x00619120  	LDS        R18, __analogkey_Driver__maxADC+0
0x08D2	0x00629130  	LDS        R19, __analogkey_Driver__maxADC+1
0x08D6	0x00609100  	LDS        R16, __analogkey_Driver__prec+0
0x08DA	0xE010    	LDI        R17, 0
0x08DC	0x0F02    	ADD        R16, R18
0x08DE	0x1F13    	ADC        R17, R19
0x08E0	0x1502    	CP         R16, R2
0x08E2	0x0513    	CPC        R17, R3
0x08E4	0xF010    	BRLO       L__analogkey_getKey41
L__analogkey_getKey57:
L__analogkey_getKey25:
;__analogkey_Driver.c,109 :: 		return _ANALOGKEY_TOUCH_KEY_1;
0x08E6	0xE001    	LDI        R16, 1
0x08E8	0xC001    	RJMP       L_end_analogkey_getKey
;__analogkey_Driver.c,107 :: 		else if(adcValue >= (_maxADC - _prec) && adcValue <= (_maxADC + _prec))
L__analogkey_getKey42:
L__analogkey_getKey41:
;__analogkey_Driver.c,111 :: 		return _ANALOGKEY_NO_TOUCH;
0x08EA	0xE000    	LDI        R16, 0
;__analogkey_Driver.c,112 :: 		}
L_end_analogkey_getKey:
0x08EC	0x9508    	RET
; end of _analogkey_getKey
_Div_16x16_U:
;__Lib_Math.c,208 :: 		
;__Lib_Math.c,211 :: 		
0x02F8	0x01C8    	MOVW       R24, R16
;__Lib_Math.c,212 :: 		
0x02FA	0x01BA    	MOVW       R22, R20
;__Lib_Math.c,214 :: 		
0x02FC	0x1BAA    	SUB        R26, R26
;__Lib_Math.c,215 :: 		
0x02FE	0x1BBB    	SUB        R27, R27
;__Lib_Math.c,216 :: 		
0x0300	0xE151    	LDI        R21, 17
;__Lib_Math.c,217 :: 		
0x0302	0xC007    	RJMP       Div_16x16_U_L2
;__Lib_Math.c,218 :: 		
Div_16x16_U_L1:
;__Lib_Math.c,219 :: 		
0x0304	0x1FAA    	ROL        R26
;__Lib_Math.c,220 :: 		
0x0306	0x1FBB    	ROL        R27
;__Lib_Math.c,221 :: 		
0x0308	0x17A6    	CP         R26, R22
;__Lib_Math.c,222 :: 		
0x030A	0x07B7    	CPC        R27, R23
;__Lib_Math.c,223 :: 		
0x030C	0xF010    	BRCS       Div_16x16_U_L2
;__Lib_Math.c,224 :: 		
0x030E	0x1BA6    	SUB        R26, R22
;__Lib_Math.c,225 :: 		
0x0310	0x0BB7    	SBC        R27, R23
;__Lib_Math.c,226 :: 		
Div_16x16_U_L2:
;__Lib_Math.c,227 :: 		
0x0312	0x1F88    	ROL        R24
;__Lib_Math.c,228 :: 		
0x0314	0x1F99    	ROL        R25
;__Lib_Math.c,229 :: 		
0x0316	0x955A    	DEC        R21
;__Lib_Math.c,230 :: 		
0x0318	0xF7A9    	BRNE       Div_16x16_U_L1
;__Lib_Math.c,231 :: 		
0x031A	0x9580    	COM        R24
;__Lib_Math.c,232 :: 		
0x031C	0x9590    	COM        R25
;__Lib_Math.c,235 :: 		
L_end_Div_16x16_U:
0x031E	0x9508    	RET
; end of _Div_16x16_U
_HWMul_16x16:
;__Lib_Math.c,398 :: 		
;__Lib_Math.c,400 :: 		
0x02E8	0x0198    	MOVW       R18, R16
;__Lib_Math.c,401 :: 		
0x02EA	0x9F24    	MUL        R18, R20
;__Lib_Math.c,402 :: 		
0x02EC	0x0180    	MOVW       R16, R0
;__Lib_Math.c,403 :: 		
0x02EE	0x9F25    	MUL        R18, R21
;__Lib_Math.c,404 :: 		
0x02F0	0x0D10    	ADD        R17, R0
;__Lib_Math.c,405 :: 		
0x02F2	0x9F34    	MUL        R19, R20
;__Lib_Math.c,406 :: 		
0x02F4	0x0D10    	ADD        R17, R0
;__Lib_Math.c,408 :: 		
L_end_HWMul_16x16:
0x02F6	0x9508    	RET
; end of _HWMul_16x16
_IntToStr:
0x064C	0x93CF    	PUSH       R28
0x064E	0x93DF    	PUSH       R29
0x0650	0xB7CD    	IN         R28, SPL+0
0x0652	0xB7DE    	IN         R29, SPL+1
0x0654	0x9724    	SBIW       R28, 4
0x0656	0xBFCD    	OUT        SPL+0, R28
0x0658	0xBFDE    	OUT        SPL+1, R29
0x065A	0x9621    	ADIW       R28, 1
;__Lib_Conversions.c,146 :: 		
;__Lib_Conversions.c,152 :: 		
0x065C	0x922F    	PUSH       R2
0x065E	0x923F    	PUSH       R3
0x0660	0xE0B0    	LDI        R27, 0
0x0662	0x83B8    	STD        Y+0, R27
0x0664	0x83B9    	STD        Y+1, R27
;__Lib_Conversions.c,153 :: 		
0x0666	0x822A    	STD        Y+2, R2
0x0668	0x823B    	STD        Y+3, R3
;__Lib_Conversions.c,154 :: 		
0x066A	0xE000    	LDI        R16, 0
0x066C	0xE010    	LDI        R17, 0
0x066E	0x1620    	CP         R2, R16
0x0670	0x0631    	CPC        R3, R17
0x0672	0xF454    	BRGE       L_IntToStr23
L__IntToStr134:
;__Lib_Conversions.c,155 :: 		
0x0674	0xE0B1    	LDI        R27, 1
0x0676	0x83B8    	STD        Y+0, R27
0x0678	0xE0B0    	LDI        R27, 0
0x067A	0x83B9    	STD        Y+1, R27
;__Lib_Conversions.c,156 :: 		
0x067C	0xE000    	LDI        R16, 0
0x067E	0xE010    	LDI        R17, 0
0x0680	0x1902    	SUB        R16, R2
0x0682	0x0913    	SBC        R17, R3
0x0684	0x830A    	STD        Y+2, R16
0x0686	0x831B    	STD        Y+3, R17
;__Lib_Conversions.c,157 :: 		
L_IntToStr23:
;__Lib_Conversions.c,158 :: 		
0x0688	0x802A    	LDD        R2, Y+2
0x068A	0x803B    	LDD        R3, Y+3
0x068C	0xDDE9    	RCALL      _WordToStr+0
;__Lib_Conversions.c,160 :: 		
; i start address is: 22 (R22)
0x068E	0xE066    	LDI        R22, 6
0x0690	0xE070    	LDI        R23, 0
; i end address is: 22 (R22)
0x0692	0x01AB    	MOVW       R20, R22
;__Lib_Conversions.c,161 :: 		
L_IntToStr24:
; i start address is: 20 (R20)
0x0694	0xE000    	LDI        R16, 0
0x0696	0xE010    	LDI        R17, 0
0x0698	0x1704    	CP         R16, R20
0x069A	0x0715    	CPC        R17, R21
0x069C	0xF490    	BRSH       L_IntToStr25
L__IntToStr135:
;__Lib_Conversions.c,162 :: 		
0x069E	0x019A    	MOVW       R18, R20
0x06A0	0x0D24    	ADD        R18, R4
0x06A2	0x1D35    	ADC        R19, R5
0x06A4	0x018A    	MOVW       R16, R20
0x06A6	0x5001    	SUBI       R16, 1
0x06A8	0x4010    	SBCI       R17, 0
0x06AA	0x01F8    	MOVW       R30, R16
0x06AC	0x0DE4    	ADD        R30, R4
0x06AE	0x1DF5    	ADC        R31, R5
0x06B0	0x8100    	LD         R16, Z
0x06B2	0x01F9    	MOVW       R30, R18
0x06B4	0x8300    	ST         Z, R16
;__Lib_Conversions.c,163 :: 		
0x06B6	0x018A    	MOVW       R16, R20
0x06B8	0x5001    	SUBI       R16, 1
0x06BA	0x4010    	SBCI       R17, 0
; i end address is: 20 (R20)
; i start address is: 22 (R22)
0x06BC	0x01B8    	MOVW       R22, R16
;__Lib_Conversions.c,164 :: 		
0x06BE	0x01AB    	MOVW       R20, R22
; i end address is: 22 (R22)
0x06C0	0xCFE9    	RJMP       L_IntToStr24
L_IntToStr25:
;__Lib_Conversions.c,165 :: 		
0x06C2	0x01F2    	MOVW       R30, R4
0x06C4	0xE2B0    	LDI        R27, 32
0x06C6	0x83B0    	ST         Z, R27
;__Lib_Conversions.c,166 :: 		
0x06C8	0x8108    	LDD        R16, Y+0
0x06CA	0x8119    	LDD        R17, Y+1
0x06CC	0x2FB0    	MOV        R27, R16
0x06CE	0x2BB1    	OR         R27, R17
0x06D0	0xF0A9    	BREQ       L_IntToStr26
L__IntToStr136:
;__Lib_Conversions.c,167 :: 		
; i start address is: 18 (R18)
0x06D2	0xE020    	LDI        R18, 0
0x06D4	0xE030    	LDI        R19, 0
; i end address is: 18 (R18)
;__Lib_Conversions.c,168 :: 		
L_IntToStr27:
; i start address is: 18 (R18)
0x06D6	0x01F9    	MOVW       R30, R18
0x06D8	0x0DE4    	ADD        R30, R4
0x06DA	0x1DF5    	ADC        R31, R5
0x06DC	0x8100    	LD         R16, Z
0x06DE	0x3200    	CPI        R16, 32
0x06E0	0xF429    	BRNE       L_IntToStr28
L__IntToStr137:
0x06E2	0x0189    	MOVW       R16, R18
0x06E4	0x5F0F    	SUBI       R16, 255
0x06E6	0x4F1F    	SBCI       R17, 255
; i end address is: 18 (R18)
; i start address is: 16 (R16)
0x06E8	0x0198    	MOVW       R18, R16
; i end address is: 16 (R16)
0x06EA	0xCFF5    	RJMP       L_IntToStr27
L_IntToStr28:
;__Lib_Conversions.c,169 :: 		
; i start address is: 18 (R18)
0x06EC	0x0189    	MOVW       R16, R18
0x06EE	0x5001    	SUBI       R16, 1
0x06F0	0x4010    	SBCI       R17, 0
; i end address is: 18 (R18)
;__Lib_Conversions.c,170 :: 		
0x06F2	0x01F8    	MOVW       R30, R16
0x06F4	0x0DE4    	ADD        R30, R4
0x06F6	0x1DF5    	ADC        R31, R5
0x06F8	0xE2BD    	LDI        R27, 45
0x06FA	0x83B0    	ST         Z, R27
L_IntToStr26:
;__Lib_Conversions.c,171 :: 		
L_end_IntToStr:
0x06FC	0x903F    	POP        R3
0x06FE	0x902F    	POP        R2
0x0700	0x9623    	ADIW       R28, 3
0x0702	0xBFCD    	OUT        SPL+0, R28
0x0704	0xBFDE    	OUT        SPL+1, R29
0x0706	0x91DF    	POP        R29
0x0708	0x91CF    	POP        R28
0x070A	0x9508    	RET
; end of _IntToStr
_WordToStr:
0x0260	0x93CF    	PUSH       R28
0x0262	0x93DF    	PUSH       R29
0x0264	0xB7CD    	IN         R28, SPL+0
0x0266	0xB7DE    	IN         R29, SPL+1
0x0268	0x9722    	SBIW       R28, 2
0x026A	0xBFCD    	OUT        SPL+0, R28
0x026C	0xBFDE    	OUT        SPL+1, R29
0x026E	0x9621    	ADIW       R28, 1
;__Lib_Conversions.c,84 :: 		
;__Lib_Conversions.c,89 :: 		
; len start address is: 17 (R17)
0x0270	0xE010    	LDI        R17, 0
; len end address is: 17 (R17)
L_WordToStr6:
; len start address is: 17 (R17)
0x0272	0x3015    	CPI        R17, 5
0x0274	0xF450    	BRSH       L_WordToStr7
L__WordToStr121:
;__Lib_Conversions.c,90 :: 		
0x0276	0x2FE1    	MOV        R30, R17
0x0278	0xE0F0    	LDI        R31, 0
0x027A	0x0DE4    	ADD        R30, R4
0x027C	0x1DF5    	ADC        R31, R5
0x027E	0xE2B0    	LDI        R27, 32
0x0280	0x83B0    	ST         Z, R27
;__Lib_Conversions.c,89 :: 		
0x0282	0x2F01    	MOV        R16, R17
0x0284	0x5F0F    	SUBI       R16, 255
0x0286	0x2F10    	MOV        R17, R16
;__Lib_Conversions.c,90 :: 		
0x0288	0xCFF4    	RJMP       L_WordToStr6
L_WordToStr7:
;__Lib_Conversions.c,91 :: 		
0x028A	0x2FE1    	MOV        R30, R17
0x028C	0xE0F0    	LDI        R31, 0
0x028E	0x0DE4    	ADD        R30, R4
0x0290	0x1DF5    	ADC        R31, R5
0x0292	0xE0B0    	LDI        R27, 0
0x0294	0x83B0    	ST         Z, R27
0x0296	0x2F01    	MOV        R16, R17
0x0298	0x5001    	SUBI       R16, 1
; len end address is: 17 (R17)
; len start address is: 19 (R19)
0x029A	0x2F30    	MOV        R19, R16
; len end address is: 19 (R19)
;__Lib_Conversions.c,93 :: 		
L_WordToStr9:
;__Lib_Conversions.c,94 :: 		
; len start address is: 19 (R19)
0x029C	0x2F03    	MOV        R16, R19
0x029E	0xE010    	LDI        R17, 0
0x02A0	0x0D04    	ADD        R16, R4
0x02A2	0x1D15    	ADC        R17, R5
0x02A4	0x8308    	STD        Y+0, R16
0x02A6	0x8319    	STD        Y+1, R17
0x02A8	0xE04A    	LDI        R20, 10
0x02AA	0xE050    	LDI        R21, 0
0x02AC	0x0181    	MOVW       R16, R2
0x02AE	0xD024    	RCALL      _Div_16x16_U+0
0x02B0	0x018D    	MOVW       R16, R26
0x02B2	0x2F20    	MOV        R18, R16
0x02B4	0x5D20    	SUBI       R18, 208
0x02B6	0x8108    	LDD        R16, Y+0
0x02B8	0x8119    	LDD        R17, Y+1
0x02BA	0x01F8    	MOVW       R30, R16
0x02BC	0x8320    	ST         Z, R18
;__Lib_Conversions.c,95 :: 		
0x02BE	0xE04A    	LDI        R20, 10
0x02C0	0xE050    	LDI        R21, 0
0x02C2	0x0181    	MOVW       R16, R2
0x02C4	0xD019    	RCALL      _Div_16x16_U+0
0x02C6	0x018C    	MOVW       R16, R24
0x02C8	0x0118    	MOVW       R2, R16
;__Lib_Conversions.c,96 :: 		
0x02CA	0x3010    	CPI        R17, 0
0x02CC	0xF409    	BRNE       L__WordToStr122
0x02CE	0x3000    	CPI        R16, 0
L__WordToStr122:
0x02D0	0xF409    	BRNE       L_WordToStr11
L__WordToStr123:
; len end address is: 19 (R19)
;__Lib_Conversions.c,97 :: 		
0x02D2	0xC004    	RJMP       L_WordToStr10
L_WordToStr11:
;__Lib_Conversions.c,98 :: 		
; len start address is: 19 (R19)
0x02D4	0x2F03    	MOV        R16, R19
0x02D6	0x5001    	SUBI       R16, 1
0x02D8	0x2F30    	MOV        R19, R16
;__Lib_Conversions.c,99 :: 		
; len end address is: 19 (R19)
0x02DA	0xCFE0    	RJMP       L_WordToStr9
L_WordToStr10:
;__Lib_Conversions.c,100 :: 		
L_end_WordToStr:
0x02DC	0x9621    	ADIW       R28, 1
0x02DE	0xBFCD    	OUT        SPL+0, R28
0x02E0	0xBFDE    	OUT        SPL+1, R29
0x02E2	0x91DF    	POP        R29
0x02E4	0x91CF    	POP        R28
0x02E6	0x9508    	RET
; end of _WordToStr
___CC2DW:
;__Lib_System.c,25 :: 		
;__Lib_System.c,27 :: 		
L_loopDW:
;__Lib_System.c,28 :: 		
0x0A7A	0x9005    	LPM        R0, Z+
;__Lib_System.c,29 :: 		
0x0A7C	0x920D    	ST         X+, R0
;__Lib_System.c,30 :: 		
0x0A7E	0x9701    	SBIW       R24, 1
;__Lib_System.c,31 :: 		
0x0A80	0xF7E1    	BRNE       L_loopDW
;__Lib_System.c,33 :: 		
L_end___CC2DW:
0x0A82	0x9508    	RET
; end of ___CC2DW
0x0C1E	0xE6A0    	LDI        R26, 96
0x0C20	0xE0B0    	LDI        R27, 0
0x0C22	0xEAEC    	LDI        R30, 172
0x0C24	0xE0FB    	LDI        R31, 11
0x0C26	0xE481    	LDI        R24, 65
0x0C28	0xE090    	LDI        R25, 0
0x0C2A	0x053D940E  	CALL       ___CC2DW
0x0C2E	0x9508    	RET
;easyavr_v7_ATMEGA32.c,47 :: __MIKROBUS1_GPIO
0x0BED	0x00F4 ;__MIKROBUS1_GPIO+0
0x0BEF	0x00BF ;__MIKROBUS1_GPIO+2
0x0BF1	0x00B0 ;__MIKROBUS1_GPIO+4
0x0BF3	0x00B5 ;__MIKROBUS1_GPIO+6
0x0BF5	0x00BA ;__MIKROBUS1_GPIO+8
0x0BF7	0x00F9 ;__MIKROBUS1_GPIO+10
0x0BF9	0x0112 ;__MIKROBUS1_GPIO+12
0x0BFB	0x0117 ;__MIKROBUS1_GPIO+14
0x0BFD	0x011C ;__MIKROBUS1_GPIO+16
0x0BFF	0x010D ;__MIKROBUS1_GPIO+18
0x0C01	0x00FE ;__MIKROBUS1_GPIO+20
0x0C03	0x0103 ;__MIKROBUS1_GPIO+22
0x0C05	0xFFFF ;__MIKROBUS1_GPIO+24
0x0C07	0xFFFF ;__MIKROBUS1_GPIO+26
0x0C09	0xFFFF ;__MIKROBUS1_GPIO+28
0x0C0B	0xFFFF ;__MIKROBUS1_GPIO+30
0x0C0D	0xFFFF ;__MIKROBUS1_GPIO+32
0x0C0F	0xFFFF ;__MIKROBUS1_GPIO+34
0x0C11	0xFFFF ;__MIKROBUS1_GPIO+36
0x0C13	0xFFFF ;__MIKROBUS1_GPIO+38
0x0C15	0xFFFF ;__MIKROBUS1_GPIO+40
0x0C17	0xFFFF ;__MIKROBUS1_GPIO+42
0x0C19	0xFFFF ;__MIKROBUS1_GPIO+44
0x0C1B	0xFFFF ;__MIKROBUS1_GPIO+46
; end of __MIKROBUS1_GPIO
;__analogkey_Driver.c,0 :: ?ICS__analogkey_Driver__prec
0x0BAC	0x33 ;?ICS__analogkey_Driver__prec+0
; end of ?ICS__analogkey_Driver__prec
;__analogkey_Driver.c,0 :: ?ICS__analogkey_Driver__maxADC
0x0BAD	0x0400 ;?ICS__analogkey_Driver__maxADC+0
; end of ?ICS__analogkey_Driver__maxADC
;Click_AnalogKey_AVR.c,0 :: ?ICS?lstr3_Click_AnalogKey_AVR
0x0BAF	0x7250 ;?ICS?lstr3_Click_AnalogKey_AVR+0
0x0BB1	0x7365 ;?ICS?lstr3_Click_AnalogKey_AVR+2
0x0BB3	0x6573 ;?ICS?lstr3_Click_AnalogKey_AVR+4
0x0BB5	0x2064 ;?ICS?lstr3_Click_AnalogKey_AVR+6
0x0BB7	0x6874 ;?ICS?lstr3_Click_AnalogKey_AVR+8
0x0BB9	0x2065 ;?ICS?lstr3_Click_AnalogKey_AVR+10
0x0BBB	0x7562 ;?ICS?lstr3_Click_AnalogKey_AVR+12
0x0BBD	0x7474 ;?ICS?lstr3_Click_AnalogKey_AVR+14
0x0BBF	0x6E6F ;?ICS?lstr3_Click_AnalogKey_AVR+16
0x0BC1	0x3A20 ;?ICS?lstr3_Click_AnalogKey_AVR+18
0x0BC3	0x0020 ;?ICS?lstr3_Click_AnalogKey_AVR+20
; end of ?ICS?lstr3_Click_AnalogKey_AVR
;Click_AnalogKey_AVR.c,0 :: ?ICS?lstr2_Click_AnalogKey_AVR
0x0BC5	0x7250 ;?ICS?lstr2_Click_AnalogKey_AVR+0
0x0BC7	0x7365 ;?ICS?lstr2_Click_AnalogKey_AVR+2
0x0BC9	0x2073 ;?ICS?lstr2_Click_AnalogKey_AVR+4
0x0BCB	0x6874 ;?ICS?lstr2_Click_AnalogKey_AVR+6
0x0BCD	0x2065 ;?ICS?lstr2_Click_AnalogKey_AVR+8
0x0BCF	0x7562 ;?ICS?lstr2_Click_AnalogKey_AVR+10
0x0BD1	0x7474 ;?ICS?lstr2_Click_AnalogKey_AVR+12
0x0BD3	0x6E6F ;?ICS?lstr2_Click_AnalogKey_AVR+14
0x0BD5	0x3A20 ;?ICS?lstr2_Click_AnalogKey_AVR+16
0x0BD7	0x0044 ;?ICS?lstr2_Click_AnalogKey_AVR+18
; end of ?ICS?lstr2_Click_AnalogKey_AVR
;Click_AnalogKey_AVR.c,0 :: ?ICS?lstr1_Click_AnalogKey_AVR
0x0BD9	0x2D2D ;?ICS?lstr1_Click_AnalogKey_AVR+0
0x0BDB	0x202D ;?ICS?lstr1_Click_AnalogKey_AVR+2
0x0BDD	0x7953 ;?ICS?lstr1_Click_AnalogKey_AVR+4
0x0BDF	0x7473 ;?ICS?lstr1_Click_AnalogKey_AVR+6
0x0BE1	0x6D65 ;?ICS?lstr1_Click_AnalogKey_AVR+8
0x0BE3	0x4920 ;?ICS?lstr1_Click_AnalogKey_AVR+10
0x0BE5	0x696E ;?ICS?lstr1_Click_AnalogKey_AVR+12
0x0BE7	0x2074 ;?ICS?lstr1_Click_AnalogKey_AVR+14
0x0BE9	0x2D2D ;?ICS?lstr1_Click_AnalogKey_AVR+16
0x0BEB	0x002D ;?ICS?lstr1_Click_AnalogKey_AVR+18
; end of ?ICS?lstr1_Click_AnalogKey_AVR
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x002A       [5]    easyavr_v7_ATMEGA32__setTX_2
0x002F       [5]    easyavr_v7_ATMEGA32__setRX_2
0x0034       [5]    easyavr_v7_ATMEGA32__setINT_2
0x0039       [5]    easyavr_v7_ATMEGA32__setAN_3
0x003E       [5]    easyavr_v7_ATMEGA32__setSDA_2
0x0043       [5]    easyavr_v7_ATMEGA32__setSCL_2
0x0048       [5]    easyavr_v7_ATMEGA32__setSCK_2
0x004D       [5]    easyavr_v7_ATMEGA32__setCS_2
0x0052       [5]    easyavr_v7_ATMEGA32__setRST_2
0x0057       [5]    easyavr_v7_ATMEGA32__setPWM_2
0x005C       [5]    easyavr_v7_ATMEGA32__setMOSI_2
0x0061       [5]    easyavr_v7_ATMEGA32__setMISO_2
0x0066       [5]    easyavr_v7_ATMEGA32__setTX_3
0x006B       [5]    easyavr_v7_ATMEGA32__setRX_3
0x0070       [5]    easyavr_v7_ATMEGA32__setINT_3
0x0075      [19]    _ADC_Get_Sample
0x0088       [5]    easyavr_v7_ATMEGA32__setSDA_3
0x008D       [5]    easyavr_v7_ATMEGA32__setSCL_3
0x0092       [5]    easyavr_v7_ATMEGA32__setSCK_3
0x0097       [5]    easyavr_v7_ATMEGA32__setCS_3
0x009C       [5]    easyavr_v7_ATMEGA32__setRST_3
0x00A1       [5]    easyavr_v7_ATMEGA32__setPWM_3
0x00A6       [5]    easyavr_v7_ATMEGA32__setMOSI_3
0x00AB       [5]    easyavr_v7_ATMEGA32__setMISO_3
0x00B0       [5]    easyavr_v7_ATMEGA32__setCS_1
0x00B5       [5]    easyavr_v7_ATMEGA32__setSCK_1
0x00BA       [5]    easyavr_v7_ATMEGA32__setMISO_1
0x00BF       [5]    easyavr_v7_ATMEGA32__setRST_1
0x00C4      [36]    _UART1_Init
0x00E8      [12]    _UART1_Write
0x00F4       [5]    easyavr_v7_ATMEGA32__setAN_1
0x00F9       [5]    easyavr_v7_ATMEGA32__setMOSI_1
0x00FE       [5]    easyavr_v7_ATMEGA32__setSCL_1
0x0103       [5]    easyavr_v7_ATMEGA32__setSDA_1
0x0108       [5]    easyavr_v7_ATMEGA32__setAN_2
0x010D       [5]    easyavr_v7_ATMEGA32__setTX_1
0x0112       [5]    easyavr_v7_ATMEGA32__setPWM_1
0x0117       [5]    easyavr_v7_ATMEGA32__setINT_1
0x011C       [5]    easyavr_v7_ATMEGA32__setRX_1
0x0121      [11]    _ADC_Init
0x012C       [1]    __analogkey_Driver_hal_gpioMap
0x012D       [3]    _ADC_Read
0x0130      [68]    _WordToStr
0x0174       [8]    _HWMul_16x16
0x017C      [20]    _Div_16x16_U
0x0190      [14]    easyavr_v7_ATMEGA32__log_write
0x019E     [130]    easyavr_v7_ATMEGA32__log_init1
0x0220       [2]    easyavr_v7_ATMEGA32__log_init3
0x0222     [130]    easyavr_v7_ATMEGA32__log_init2
0x02A4     [130]    easyavr_v7_ATMEGA32__log_initUart
0x0326      [96]    _IntToStr
0x0386      [11]    _analogkey_adcRead
0x0391     [230]    _analogkey_getKey
0x0477       [7]    _Delay_10ms
0x047E     [102]    _mikrobus_logWrite
0x04E4       [2]    _analogkey_gpioDriverInit
0x04E6      [10]    _Delay_100ms
0x04F0      [51]    _mikrobus_logInit
0x0523       [2]    _analogkey_adcInit
0x0525       [1]    _analogkey_adcSetInputChannel
0x0526      [23]    _analogkey_setResolution
0x053D       [5]    ___CC2DW
0x0542      [25]    _applicationInit
0x055B      [29]    _systemInit
0x0578      [83]    _applicationTask
0x05CB      [11]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0000       [1]    Delay_Cyc_loc_L0
0x0001       [1]    R1
0x0002       [4]    FARG_LongWordToStr_input
0x0002       [2]    FARG_WordToStr_input
0x0002       [4]    FARG_LongIntToStrWithZeros_input
0x0002       [4]    FARG_LongToStr_input
0x0002       [4]    FARG_LongWordToStrWithZeros_input
0x0002       [1]    FARG_ShortToStr_input
0x0002       [2]    FARG_WordToStrWithZeros_input
0x0002       [2]    FARG_IntToStr_input
0x0002       [2]    FARG_IntToStrWithZeros_input
0x0002       [1]    FARG_ByteToStr_input
0x0002       [4]    FARG_LongIntToHex_input
0x0002       [2]    FARG_strcmp_s1
0x0002       [2]    FARG_strcpy_to
0x0002       [1]    FARG_Delay_Cyc_cycles_div_by_10
0x0002       [2]    FARG_strchr_ptr
0x0002       [2]    FARG_strncpy_to
0x0002       [2]    FARG_strspn_str1
0x0002       [2]    FARG_strlen_s
0x0002       [2]    FARG_strncat_to
0x0002       [2]    FARG_VDelay_Advanced_ms_Time_ms
0x0002       [2]    FARG_memcpy_d1
0x0002       [2]    FARG_memchr_p
0x0002       [2]    FARG_memcmp_s1
0x0002       [2]    FARG_memset_p1
0x0002       [2]    FARG_strcat_to
0x0002       [2]    FARG_VDelay_ms_Time_ms
0x0002       [2]    FARG_memmove_to
0x0002       [1]    FARG_ByteToHex_input
0x0002       [1]    FARG_ShortToHex_input
0x0002       [2]    FARG___analogkey_Driver_hal_gpioMap_gpioObj
0x0002       [2]    FARG_strstr_s1
0x0002       [2]    FARG_mikrobus_logWrite_data_
0x0002       [4]    FARG_LongWordToHex_input
0x0002       [2]    FARG_WordToHex_input
0x0002       [2]    FARG_IntToHex_input
0x0002       [1]    FARG_analogkey_setResolution_resolution
0x0002       [2]    FARG_strncmp_s1
0x0002       [2]    FARG_strcspn_s1
0x0002       [2]    FARG_strtok_s1
0x0002       [2]    FARG_analogkey_gpioDriverInit_gpioObj
0x0002       [2]    FARG_strrchr_ptr
0x0002       [2]    FARG_analogkey_getKey_adcValue
0x0002       [2]    FARG_strpbrk_s1
0x0002       [1]    FARG_Dec2Bcd_decnum
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setSCL_2_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setSDA_2_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setRX_2_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setTX_2_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setRST_3_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setCS_3_value
0x0002       [1]    R2
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setAN_3_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setINT_2_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setRST_2_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setCS_2_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setSDA_1_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setAN_2_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setMOSI_2_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setPWM_2_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setSCK_2_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setMISO_2_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setSCK_3_value
0x0002       [2]    FARG_easyavr_v7_ATMEGA32__log_write_data_
0x0002       [4]    FARG_easyavr_v7_ATMEGA32__log_init1_baud
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__gpioInit_2_pin
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__gpioInit_3_pin
0x0002       [4]    FARG_easyavr_v7_ATMEGA32__log_initUart_baud
0x0002       [1]    FARG_mikrobus_gpioInit_bus
0x0002       [4]    FARG_easyavr_v7_ATMEGA32__log_init2_baud
0x0002       [4]    FARG_easyavr_v7_ATMEGA32__log_init3_baud
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__gpioInit_1_pin
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setPWM_3_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setINT_3_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setMISO_3_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setMOSI_3_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setSCL_3_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setSDA_3_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setRX_3_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setTX_3_value
0x0002       [1]    FARG_UART1_Write_data_
0x0002       [2]    FARG_UART1_Write_Text_uart_text
0x0002       [1]    FARG_ADC_Read_channel
0x0002       [4]    FARG_UART1_Init_Advanced_bps
0x0002       [1]    FARG_UART_Write__data
0x0002       [2]    FARG_UART_Write_Text_uart_text
0x0002       [2]    FARG_UART1_Read_Text_Output
0x0002       [2]    FARG_UART_Set_Active_read_ptr
0x0002       [2]    FARG_Dec2Bcd16_decnum
0x0002       [2]    FARG_Rtrim_string
0x0002       [1]    FARG_Bcd2Dec_bcdnum
0x0002       [2]    FARG_Bcd2Dec16_bcdnum
0x0002       [1]    FARG_ADC_Init_Advanced_reference
0x0002       [1]    FARG_ADC_Get_Sample_channel
0x0002       [2]    FARG_Ltrim_string
0x0002       [4]    FARG_FloatToStr_fnum
0x0002       [2]    FARG_UART_Read_Text_Output
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setMISO_1_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setSCK_1_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setTX_1_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setMOSI_1_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setINT_1_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setPWM_1_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setRX_1_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setAN_1_value
0x0002       [1]    FARG_mikrobus_logInit_port
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setSCL_1_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setCS_1_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setRST_1_value
0x0003       [1]    FARG_mikrobus_gpioInit_pin
0x0003       [2]    FARG_ByteToHex_output
0x0003       [4]    FARG_mikrobus_logInit_baud
0x0003       [1]    FARG_easyavr_v7_ATMEGA32__gpioInit_3_dir
0x0003       [2]    FARG_ShortToStr_output
0x0003       [1]    R3
0x0003       [2]    FARG_ByteToStr_output
0x0003       [2]    FARG_ShortToHex_output
0x0003       [1]    FARG_easyavr_v7_ATMEGA32__gpioInit_2_dir
0x0003       [1]    FARG_easyavr_v7_ATMEGA32__gpioInit_1_dir
0x0004       [2]    FARG_VDelay_Advanced_ms_Current_Fosc_kHz
0x0004       [1]    FARG_mikrobus_logWrite_format
0x0004       [2]    FARG_IntToHex_output
0x0004       [2]    FARG_WordToStr_output
0x0004       [2]    FARG_WordToStrWithZeros_output
0x0004       [2]    FARG_WordToHex_output
0x0004       [2]    FARG_strpbrk_s2
0x0004       [1]    FARG_strrchr_chr
0x0004       [2]    FARG_strstr_s2
0x0004       [2]    FARG_UART_Read_Text_Delimiter
0x0004       [1]    R4
0x0004       [1]    FARG_mikrobus_gpioInit_direction
0x0004       [2]    FARG_UART_Set_Active_write_ptr
0x0004       [2]    FARG_IntToStr_output
0x0004       [2]    FARG_IntToStrWithZeros_output
0x0004       [2]    FARG_UART1_Read_Text_Delimiter
0x0004       [2]    FARG_strncmp_s2
0x0004       [1]    FARG_memset_character
0x0004       [2]    FARG_strcat_from
0x0004       [1]    FARG_strchr_chr
0x0004       [2]    FARG_memmove_from
0x0004       [1]    FARG_memchr_n
0x0004       [2]    FARG_memcmp_s2
0x0004       [2]    FARG_memcpy_s1
0x0004       [2]    FARG_strspn_str2
0x0004       [2]    FARG_strcspn_s2
0x0004       [2]    FARG_strtok_s2
0x0004       [2]    FARG_strncpy_from
0x0004       [2]    FARG_strcmp_s2
0x0004       [2]    FARG_strcpy_from
0x0004       [2]    FARG_strncat_from
0x0005       [2]    FARG_memchr_v
0x0005       [1]    R5
0x0005       [2]    FARG_memset_n
0x0006       [2]    FARG_memcmp_n
0x0006       [1]    FARG_UART1_Init_Advanced_parity
0x0006       [2]    FARG_LongIntToStrWithZeros_output
0x0006       [2]    FARG_FloatToStr_str
0x0006       [2]    FARG_UART_Set_Active_tx_idle_ptr
0x0006       [1]    FARG_UART_Read_Text_Attempts
0x0006       [1]    R6
0x0006       [1]    FARG_UART1_Read_Text_Attempts
0x0006       [2]    FARG_memmove_n
0x0006       [2]    FARG_LongWordToHex_output
0x0006       [1]    FARG_strncmp_len
0x0006       [2]    FARG_strncat_size
0x0006       [2]    FARG_strncpy_size
0x0006       [2]    FARG_memcpy_n
0x0006       [2]    FARG_LongToStr_output
0x0006       [2]    FARG_LongWordToStrWithZeros_output
0x0006       [2]    FARG_LongIntToHex_output
0x0006       [2]    FARG_LongWordToStr_output
0x0007       [1]    R7
0x0007       [1]    FARG_UART1_Init_Advanced_stop_bits
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [1]    R21
0x0016       [1]    R22
0x0017       [1]    R23
0x0018       [1]    R24
0x0019       [1]    R25
0x001A       [2]    X
0x001A       [1]    XL
0x001A       [1]    R26
0x001B       [1]    XH
0x001B       [1]    R27
0x001C       [2]    Y
0x001C       [1]    R28
0x001C       [1]    YL
0x001D       [1]    YH
0x001D       [1]    R29
0x001E       [2]    Z
0x001E       [1]    R30
0x001E       [1]    ZL
0x001F       [1]    ZH
0x001F       [1]    R31
0x0020       [0]    TWBR5_bit
0x0020       [0]    TWBR6_bit
0x0020       [0]    TWBR4_bit
0x0020       [1]    TWBR
0x0020       [0]    TWBR0_bit
0x0020       [0]    TWBR1_bit
0x0020       [0]    TWBR7_bit
0x0020       [0]    TWBR3_bit
0x0020       [0]    TWBR2_bit
0x0021       [0]    TWPS1_bit
0x0021       [0]    TWS3_bit
0x0021       [1]    TWSR
0x0021       [0]    TWPS0_bit
0x0021       [0]    TWS6_bit
0x0021       [0]    TWS7_bit
0x0021       [0]    TWS4_bit
0x0021       [0]    TWS5_bit
0x0022       [0]    TWA2_bit
0x0022       [0]    TWA1_bit
0x0022       [0]    TWA0_bit
0x0022       [0]    TWA3_bit
0x0022       [0]    TWA6_bit
0x0022       [0]    TWA5_bit
0x0022       [0]    TWA4_bit
0x0022       [0]    TWGCE_bit
0x0022       [1]    TWAR
0x0023       [1]    TWDR
0x0023       [0]    TWD7_bit
0x0023       [0]    TWD3_bit
0x0023       [0]    TWD5_bit
0x0023       [0]    TWD6_bit
0x0023       [0]    TWD2_bit
0x0023       [0]    TWD1_bit
0x0023       [0]    TWD4_bit
0x0023       [0]    TWD0_bit
0x0024       [0]    ADCL1_bit
0x0024       [0]    ADCL6_bit
0x0024       [0]    ADCL5_bit
0x0024       [0]    ADCL0_bit
0x0024       [0]    ADCL3_bit
0x0024       [0]    ADCL2_bit
0x0024       [0]    ADCL4_bit
0x0024       [0]    ADCL7_bit
0x0024       [1]    ADCL
0x0025       [1]    ADCH
0x0025       [0]    ADCH0_bit
0x0025       [0]    ADCH4_bit
0x0025       [0]    ADCH6_bit
0x0025       [0]    ADCH5_bit
0x0025       [0]    ADCH7_bit
0x0025       [0]    ADCH1_bit
0x0025       [0]    ADCH2_bit
0x0025       [0]    ADCH3_bit
0x0026       [0]    ADPS1_bit
0x0026       [0]    ADPS2_bit
0x0026       [1]    ADCSRA
0x0026       [0]    ADPS0_bit
0x0026       [0]    ADEN_bit
0x0026       [0]    ADIE_bit
0x0026       [0]    ADIF_bit
0x0026       [0]    ADSC_bit
0x0026       [0]    ADATE_bit
0x0027       [0]    MUX3_bit
0x0027       [1]    ADMUX
0x0027       [0]    MUX0_bit
0x0027       [0]    MUX2_bit
0x0027       [0]    REFS0_bit
0x0027       [0]    MUX4_bit
0x0027       [0]    MUX1_bit
0x0027       [0]    REFS1_bit
0x0027       [0]    ADLAR_bit
0x0028       [0]    ACD_bit
0x0028       [0]    ACI_bit
0x0028       [0]    ACIC_bit
0x0028       [1]    ACSR
0x0028       [0]    ACIS0_bit
0x0028       [0]    ACIS1_bit
0x0028       [0]    ACIE_bit
0x0028       [0]    ACBG_bit
0x0028       [0]    ACO_bit
0x0029       [0]    UBRR4_bit
0x0029       [0]    UBRR7_bit
0x0029       [0]    UBRR6_bit
0x0029       [0]    UBRR2_bit
0x0029       [0]    UBRR0_bit
0x0029       [1]    UBRRL
0x0029       [0]    UBRR3_bit
0x0029       [0]    UBRR5_bit
0x0029       [0]    UBRR1_bit
0x002A       [0]    TXCIE_bit
0x002A       [1]    UCSR0B
0x002A       [0]    RXEN_bit
0x002A       [0]    UDRIE_bit
0x002A       [1]    UCSRB
0x002A       [0]    TXB8_bit
0x002A       [0]    TXEN_bit
0x002A       [0]    UCSZ2_bit
0x002A       [0]    RXCIE_bit
0x002A       [0]    RXB8_bit
0x002B       [0]    FE_bit
0x002B       [0]    RXC_bit
0x002B       [0]    UPE_bit
0x002B       [0]    DOR_bit
0x002B       [0]    RXC0_bit
0x002B       [0]    UDRE_bit
0x002B       [0]    TXC0_bit
0x002B       [0]    UDRE0_bit
0x002B       [0]    TXC_bit
0x002B       [0]    U2X_bit
0x002B       [0]    MPCM_bit
0x002B       [1]    UCSRA
0x002C       [0]    UDR7_bit
0x002C       [0]    UDR2_bit
0x002C       [0]    UDR4_bit
0x002C       [0]    UDR6_bit
0x002C       [0]    UDR5_bit
0x002C       [0]    UDR0__bit
0x002C       [1]    UDR
0x002C       [0]    UDR3_bit
0x002C       [1]    UDR0
0x002C       [0]    UDR1_bit
0x002D       [0]    SPE_bit
0x002D       [0]    SPIE_bit
0x002D       [0]    SPR1_bit
0x002D       [0]    SPR0_bit
0x002D       [1]    SPCR
0x002D       [0]    CPHA_bit
0x002D       [0]    DORD_bit
0x002D       [0]    MSTR_bit
0x002D       [0]    CPOL_bit
0x002E       [0]    SPI2X_bit
0x002E       [1]    SPSR
0x002E       [0]    SPIF_bit
0x002E       [0]    WCOL_bit
0x002F       [0]    SPDR3_bit
0x002F       [0]    SPDR4_bit
0x002F       [0]    SPDR5_bit
0x002F       [0]    SPDR2_bit
0x002F       [0]    SPDR0_bit
0x002F       [1]    SPDR
0x002F       [0]    SPDR1_bit
0x002F       [0]    SPDR7_bit
0x002F       [0]    SPDR6_bit
0x0030       [0]    PIND5_bit
0x0030       [0]    PIND4_bit
0x0030       [0]    PIND6_bit
0x0030       [1]    PIND
0x0030       [0]    PIND7_bit
0x0030       [0]    PIND0_bit
0x0030       [0]    PIND1_bit
0x0030       [0]    PIND2_bit
0x0030       [0]    PIND3_bit
0x0031       [0]    DDD3_bit
0x0031       [0]    DDD5_bit
0x0031       [0]    DDD6_bit
0x0031       [0]    DDD4_bit
0x0031       [0]    DDD7_bit
0x0031       [0]    DDD0_bit
0x0031       [1]    DDRD
0x0031       [0]    DDD1_bit
0x0031       [0]    DDD2_bit
0x0032       [0]    PORTD2_bit
0x0032       [0]    PORTD4_bit
0x0032       [0]    PORTD3_bit
0x0032       [0]    PORTD5_bit
0x0032       [0]    PORTD6_bit
0x0032       [0]    PORTD1_bit
0x0032       [0]    PORTD0_bit
0x0032       [1]    PORTD
0x0032       [0]    PORTD7_bit
0x0033       [0]    PINC4_bit
0x0033       [0]    PINC5_bit
0x0033       [0]    PINC0_bit
0x0033       [0]    PINC6_bit
0x0033       [0]    PINC7_bit
0x0033       [0]    PINC2_bit
0x0033       [0]    PINC1_bit
0x0033       [0]    PINC3_bit
0x0033       [1]    PINC
0x0034       [0]    DDC5_bit
0x0034       [0]    DDC4_bit
0x0034       [0]    DDC6_bit
0x0034       [0]    DDC7_bit
0x0034       [0]    DDC0_bit
0x0034       [1]    DDRC
0x0034       [0]    DDC1_bit
0x0034       [0]    DDC3_bit
0x0034       [0]    DDC2_bit
0x0035       [0]    PORTC4_bit
0x0035       [0]    PORTC0_bit
0x0035       [1]    PORTC
0x0035       [0]    PORTC2_bit
0x0035       [0]    PORTC5_bit
0x0035       [0]    PORTC3_bit
0x0035       [0]    PORTC7_bit
0x0035       [0]    PORTC6_bit
0x0035       [0]    PORTC1_bit
0x0036       [1]    PINB
0x0036       [0]    PINB4_bit
0x0036       [0]    PINB3_bit
0x0036       [0]    PINB7_bit
0x0036       [0]    PINB6_bit
0x0036       [0]    PINB5_bit
0x0036       [0]    PINB0_bit
0x0036       [0]    PINB1_bit
0x0036       [0]    PINB2_bit
0x0037       [0]    DDB3_bit
0x0037       [0]    DDB2_bit
0x0037       [0]    DDB6_bit
0x0037       [0]    DDB5_bit
0x0037       [0]    DDB4_bit
0x0037       [0]    DDB7_bit
0x0037       [0]    DDB0_bit
0x0037       [1]    DDRB
0x0037       [0]    DDB1_bit
0x0038       [0]    PORTB7_bit
0x0038       [1]    PORTB
0x0038       [0]    PORTB3_bit
0x0038       [0]    PORTB1_bit
0x0038       [0]    PORTB0_bit
0x0038       [0]    PORTB2_bit
0x0038       [0]    PORTB4_bit
0x0038       [0]    PORTB5_bit
0x0038       [0]    PORTB6_bit
0x0039       [0]    PINA6_bit
0x0039       [1]    PINA
0x0039       [0]    PINA2_bit
0x0039       [0]    PINA4_bit
0x0039       [0]    PINA0_bit
0x0039       [0]    PINA1_bit
0x0039       [0]    PINA5_bit
0x0039       [0]    PINA3_bit
0x0039       [0]    PINA7_bit
0x003A       [0]    DDA1_bit
0x003A       [0]    DDA2_bit
0x003A       [0]    DDA4_bit
0x003A       [0]    DDA0_bit
0x003A       [1]    DDRA
0x003A       [0]    DDA6_bit
0x003A       [0]    DDA5_bit
0x003A       [0]    DDA7_bit
0x003A       [0]    DDA3_bit
0x003B       [0]    PORTA0_bit
0x003B       [1]    PORTA
0x003B       [0]    PORTA6_bit
0x003B       [0]    PORTA5_bit
0x003B       [0]    PORTA4_bit
0x003B       [0]    PORTA7_bit
0x003B       [0]    PORTA2_bit
0x003B       [0]    PORTA1_bit
0x003B       [0]    PORTA3_bit
0x003C       [0]    EERE_bit
0x003C       [1]    EECR
0x003C       [0]    EEWE_bit
0x003C       [0]    EERIE_bit
0x003C       [0]    EEMWE_bit
0x003D       [0]    EEDR1_bit
0x003D       [0]    EEDR2_bit
0x003D       [1]    EEDR
0x003D       [0]    EEDR0_bit
0x003D       [0]    EEDR3_bit
0x003D       [0]    EEDR6_bit
0x003D       [0]    EEDR7_bit
0x003D       [0]    EEDR4_bit
0x003D       [0]    EEDR5_bit
0x003E       [0]    EEAR4_bit
0x003E       [0]    EEAR3_bit
0x003E       [0]    EEAR7_bit
0x003E       [0]    EEAR6_bit
0x003E       [0]    EEAR5_bit
0x003E       [0]    EEAR00_bit
0x003E       [1]    EEARL
0x003E       [0]    EEAR2_bit
0x003E       [0]    EEAR1_bit
0x003F       [0]    EEAR9_bit
0x003F       [0]    EEAR8_bit
0x003F       [1]    EEARH
0x0040       [1]    UCSR0C
0x0040       [0]    UBRR8_bit
0x0040       [0]    UPM1_bit
0x0040       [0]    UPM0_bit
0x0040       [0]    UBRR11_bit
0x0040       [0]    USBS_bit
0x0040       [0]    UBRR9_bit
0x0040       [0]    UMSEL_bit
0x0040       [0]    UCSZ0_bit
0x0040       [0]    UBRR10_bit
0x0040       [0]    UCSZ1_bit
0x0040       [0]    URSEL_bit
0x0040       [1]    UCSRC
0x0040       [1]    UBRRH
0x0040       [0]    UCPOL_bit
0x0041       [0]    WDP1_bit
0x0041       [0]    WDP2_bit
0x0041       [0]    WDTOE_bit
0x0041       [0]    WDP0_bit
0x0041       [1]    WDTCR
0x0041       [0]    WDE_bit
0x0042       [0]    TCN2UB_bit
0x0042       [0]    OCR2UB_bit
0x0042       [0]    AS2_bit
0x0042       [1]    ASSR
0x0042       [0]    TCR2UB_bit
0x0043       [0]    OCR2_6_bit
0x0043       [0]    OCR2_4_bit
0x0043       [0]    OCR2_2_bit
0x0043       [0]    OCR2_7_bit
0x0043       [0]    OCR2_1_bit
0x0043       [1]    OCR2
0x0043       [0]    OCR2_5_bit
0x0043       [0]    OCR2_3_bit
0x0043       [0]    OCR2_0_bit
0x0044       [0]    TCNT2_6_bit
0x0044       [0]    TCNT2_1_bit
0x0044       [0]    TCNT2_5_bit
0x0044       [0]    TCNT2_2_bit
0x0044       [0]    TCNT2_7_bit
0x0044       [1]    TCNT2
0x0044       [0]    TCNT2_4_bit
0x0044       [0]    TCNT2_0_bit
0x0044       [0]    TCNT2_3_bit
0x0045       [0]    CS22_bit
0x0045       [0]    WGM21_bit
0x0045       [0]    CS21_bit
0x0045       [0]    COM20_bit
0x0045       [0]    COM21_bit
0x0045       [1]    TCCR2
0x0045       [0]    FOC2_bit
0x0045       [0]    WGM20_bit
0x0045       [0]    CS20_bit
0x0046       [1]    ICR1L
0x0046       [0]    ICR1L4_bit
0x0046       [0]    ICR1L7_bit
0x0046       [0]    ICR1L5_bit
0x0046       [0]    ICR1L3_bit
0x0046       [0]    ICR1L0_bit
0x0046       [0]    ICR1L2_bit
0x0046       [0]    ICR1L1_bit
0x0046       [0]    ICR1L6_bit
0x0047       [0]    ICR1H0_bit
0x0047       [0]    ICR1H2_bit
0x0047       [0]    ICR1H6_bit
0x0047       [0]    ICR1H3_bit
0x0047       [0]    ICR1H7_bit
0x0047       [0]    ICR1H4_bit
0x0047       [0]    ICR1H1_bit
0x0047       [1]    ICR1H
0x0047       [0]    ICR1H5_bit
0x0048       [0]    OCR1BL4_bit
0x0048       [0]    OCR1BL1_bit
0x0048       [0]    OCR1BL0_bit
0x0048       [0]    OCR1BL7_bit
0x0048       [1]    OCR1BL
0x0048       [0]    OCR1BL2_bit
0x0048       [0]    OCR1BL3_bit
0x0048       [0]    OCR1BL6_bit
0x0048       [0]    OCR1BL5_bit
0x0049       [0]    OCR1BH6_bit
0x0049       [0]    OCR1BH2_bit
0x0049       [0]    OCR1BH0_bit
0x0049       [0]    OCR1BH5_bit
0x0049       [0]    OCR1BH3_bit
0x0049       [0]    OCR1BH4_bit
0x0049       [1]    OCR1BH
0x0049       [0]    OCR1BH7_bit
0x0049       [0]    OCR1BH1_bit
0x004A       [0]    OCR1AL5_bit
0x004A       [0]    OCR1AL1_bit
0x004A       [1]    OCR1AL
0x004A       [0]    OCR1AL4_bit
0x004A       [0]    OCR1AL6_bit
0x004A       [0]    OCR1AL3_bit
0x004A       [0]    OCR1AL2_bit
0x004A       [0]    OCR1AL7_bit
0x004A       [0]    OCR1AL0_bit
0x004B       [0]    OCR1AH1_bit
0x004B       [0]    OCR1AH3_bit
0x004B       [0]    OCR1AH5_bit
0x004B       [0]    OCR1AH2_bit
0x004B       [1]    OCR1AH
0x004B       [0]    OCR1AH0_bit
0x004B       [0]    OCR1AH6_bit
0x004B       [0]    OCR1AH7_bit
0x004B       [0]    OCR1AH4_bit
0x004C       [0]    TCNT1L5_bit
0x004C       [0]    TCNT1L2_bit
0x004C       [0]    TCNT1L3_bit
0x004C       [0]    TCNT1L0_bit
0x004C       [0]    TCNT1L6_bit
0x004C       [0]    TCNT1L1_bit
0x004C       [0]    TCNT1L7_bit
0x004C       [1]    TCNT1L
0x004C       [0]    TCNT1L4_bit
0x004D       [0]    TCNT1H3_bit
0x004D       [0]    TCNT1H1_bit
0x004D       [0]    TCNT1H4_bit
0x004D       [0]    TCNT1H2_bit
0x004D       [0]    TCNT1H5_bit
0x004D       [0]    TCNT1H0_bit
0x004D       [0]    TCNT1H7_bit
0x004D       [1]    TCNT1H
0x004D       [0]    TCNT1H6_bit
0x004E       [0]    ICES1_bit
0x004E       [1]    TCCR1B
0x004E       [0]    CS10_bit
0x004E       [0]    CS12_bit
0x004E       [0]    CS11_bit
0x004E       [0]    WGM12_bit
0x004E       [0]    ICNC1_bit
0x004E       [0]    WGM13_bit
0x004F       [0]    COM1B0_bit
0x004F       [0]    FOC1A_bit
0x004F       [0]    COM1B1_bit
0x004F       [0]    COM1A0_bit
0x004F       [0]    WGM10_bit
0x004F       [0]    WGM11_bit
0x004F       [0]    COM1A1_bit
0x004F       [1]    TCCR1A
0x004F       [0]    FOC1B_bit
0x0050       [0]    PUD_bit
0x0050       [0]    PSR2_bit
0x0050       [1]    SFIOR
0x0050       [0]    ADTS0_bit
0x0050       [0]    ACME_bit
0x0050       [0]    ADTS2_bit
0x0050       [0]    PSR10_bit
0x0050       [0]    ADTS1_bit
0x0051       [0]    CAL0_bit
0x0051       [0]    CAL5_bit
0x0051       [0]    CAL3_bit
0x0051       [0]    CAL4_bit
0x0051       [1]    OCDR
0x0051       [0]    CAL2_bit
0x0051       [0]    CAL6_bit
0x0051       [0]    CAL1_bit
0x0051       [1]    OSCCAL
0x0051       [0]    CAL7_bit
0x0052       [1]    TCNT0
0x0052       [0]    TCNT0_6_bit
0x0052       [0]    TCNT0_4_bit
0x0052       [0]    TCNT0_5_bit
0x0052       [0]    TCNT0_7_bit
0x0052       [0]    TCNT0_1_bit
0x0052       [0]    TCNT0_2_bit
0x0052       [0]    TCNT0_3_bit
0x0052       [0]    TCNT0_0_bit
0x0053       [1]    TCCR0
0x0053       [0]    CS01_bit
0x0053       [0]    CS00_bit
0x0053       [0]    CS02_bit
0x0053       [0]    COM00_bit
0x0053       [0]    FOC0_bit
0x0053       [0]    COM01_bit
0x0053       [0]    WGM00_bit
0x0053       [0]    WGM01_bit
0x0054       [0]    JTD_bit
0x0054       [0]    ISC2_bit
0x0054       [1]    MCUCSR
0x0054       [0]    BORF_bit
0x0054       [0]    WDRF_bit
0x0054       [0]    JTRF_bit
0x0054       [0]    EXTRF_bit
0x0054       [0]    PORF_bit
0x0055       [0]    ISC10_bit
0x0055       [0]    SE_bit
0x0055       [0]    SM0_bit
0x0055       [0]    SM2_bit
0x0055       [0]    SM1_bit
0x0055       [0]    ISC01_bit
0x0055       [0]    ISC11_bit
0x0055       [1]    MCUCR
0x0055       [0]    ISC00_bit
0x0056       [0]    TWEN_bit
0x0056       [0]    TWIE_bit
0x0056       [0]    TWSTO_bit
0x0056       [0]    TWWC_bit
0x0056       [1]    TWCR
0x0056       [0]    TWSTA_bit
0x0056       [0]    TWINT_bit
0x0056       [0]    TWEA_bit
0x0057       [0]    BLBSET_bit
0x0057       [0]    RWWSB_bit
0x0057       [0]    PGWRT_bit
0x0057       [0]    PGERS_bit
0x0057       [0]    SPMEN_bit
0x0057       [1]    SPMCSR
0x0057       [1]    SPMCR
0x0057       [0]    RWWSRE_bit
0x0057       [0]    SPMIE_bit
0x0058       [1]    TIFR
0x0058       [0]    OCF1A_bit
0x0058       [0]    ICF1_bit
0x0058       [0]    TOV1_bit
0x0058       [0]    TOV0_bit
0x0058       [0]    OCF2_bit
0x0058       [0]    OCF0_bit
0x0058       [0]    TOV2_bit
0x0058       [0]    OCF1B_bit
0x0059       [0]    OCIE1B_bit
0x0059       [0]    TOIE1_bit
0x0059       [0]    TICIE1_bit
0x0059       [0]    OCIE1A_bit
0x0059       [0]    OCIE2_bit
0x0059       [0]    TOIE0_bit
0x0059       [0]    OCIE0_bit
0x0059       [1]    TIMSK
0x0059       [0]    TOIE2_bit
0x005A       [0]    INTF0_bit
0x005A       [0]    INTF2_bit
0x005A       [1]    GIFR
0x005A       [0]    INTF1_bit
0x005B       [0]    IVSEL_bit
0x005B       [0]    IVCE_bit
0x005B       [1]    GICR
0x005B       [0]    INT1_bit
0x005B       [0]    INT0_bit
0x005B       [0]    INT2_bit
0x005C       [0]    OCR0_4_bit
0x005C       [0]    OCR0_3_bit
0x005C       [0]    OCR0_5_bit
0x005C       [0]    OCR0_7_bit
0x005C       [0]    OCR0_6_bit
0x005C       [1]    OCR0
0x005C       [0]    OCR0_0_bit
0x005C       [0]    OCR0_2_bit
0x005C       [0]    OCR0_1_bit
0x005D       [0]    SP2_bit
0x005D       [0]    SP3_bit
0x005D       [0]    SP1_bit
0x005D       [1]    SPL
0x005D       [0]    SP0_bit
0x005D       [0]    SP5_bit
0x005D       [0]    SP7_bit
0x005D       [0]    SP4_bit
0x005D       [0]    SP6_bit
0x005E       [0]    SP11_bit
0x005E       [0]    SP10_bit
0x005E       [1]    SPH
0x005E       [0]    SP8_bit
0x005E       [0]    SP9_bit
0x005F       [0]    SREG_N_bit
0x005F       [0]    SREG_V_bit
0x005F       [0]    SREG_C_bit
0x005F       [0]    SREG_Z_bit
0x005F       [0]    SREG_T_bit
0x005F       [0]    SREG_I_bit
0x005F       [0]    SREG_S_bit
0x005F       [0]    SREG_H_bit
0x005F       [1]    SREG
0x0060       [1]    __analogkey_Driver__prec
0x0061       [2]    __analogkey_Driver__maxADC
0x0063      [22]    ?lstr3_Click_AnalogKey_AVR
0x0079      [20]    ?lstr2_Click_AnalogKey_AVR
0x008D      [20]    ?lstr1_Click_AnalogKey_AVR
0x00A1       [2]    _ADC_Get_Sample_Ptr
0x00A3       [2]    _logger
0x00A5       [2]    _UART_Rdy_Ptr
0x00A7       [2]    _UART_Tx_Idle_Ptr
0x00A9       [2]    _UART_Wr_Ptr
0x00AB       [2]    _UART_Rd_Ptr
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0BAC       [1]    ?ICS__analogkey_Driver__prec
0x0BAD       [2]    ?ICS__analogkey_Driver__maxADC
0x0BAF      [22]    ?ICS?lstr3_Click_AnalogKey_AVR
0x0BC5      [20]    ?ICS?lstr2_Click_AnalogKey_AVR
0x0BD9      [20]    ?ICS?lstr1_Click_AnalogKey_AVR
0x0BED      [48]    __MIKROBUS1_GPIO
